// Code generated by goa v3.2.4, DO NOT EDIT.
//
// waitlist HTTP server types
//
// Command:
// $ goa gen github.com/tchssk/reserve-with-google-goa/design

package server

import (
	waitlist "github.com/tchssk/reserve-with-google-goa/gen/waitlist"
	goa "goa.design/goa/v3/pkg"
)

// BatchGetWaitEstimatesRequestBody is the type of the "waitlist" service
// "batch_get_wait_estimates" endpoint HTTP request body.
type BatchGetWaitEstimatesRequestBody struct {
	MerchantID *string `form:"merchant_id,omitempty" json:"merchant_id,omitempty" xml:"merchant_id,omitempty"`
	ServiceID  *string `form:"service_id,omitempty" json:"service_id,omitempty" xml:"service_id,omitempty"`
	PartySize  []int32 `form:"party_size,omitempty" json:"party_size,omitempty" xml:"party_size,omitempty"`
}

// CreateWaitlistEntryRequestBody is the type of the "waitlist" service
// "create_waitlist_entry" endpoint HTTP request body.
type CreateWaitlistEntryRequestBody struct {
	MerchantID        *string                                `form:"merchant_id,omitempty" json:"merchant_id,omitempty" xml:"merchant_id,omitempty"`
	ServiceID         *string                                `form:"service_id,omitempty" json:"service_id,omitempty" xml:"service_id,omitempty"`
	PartySize         *int32                                 `form:"party_size,omitempty" json:"party_size,omitempty" xml:"party_size,omitempty"`
	UserInformation   *UserInformationRequestBodyRequestBody `form:"user_information,omitempty" json:"user_information,omitempty" xml:"user_information,omitempty"`
	AdditionalRequest *string                                `form:"additional_request,omitempty" json:"additional_request,omitempty" xml:"additional_request,omitempty"`
	IdempotencyToken  *string                                `form:"idempotency_token,omitempty" json:"idempotency_token,omitempty" xml:"idempotency_token,omitempty"`
}

// GetWaitlistEntryRequestBody is the type of the "waitlist" service
// "get_waitlist_entry" endpoint HTTP request body.
type GetWaitlistEntryRequestBody struct {
	WaitlistEntryID *string `form:"waitlist_entry_id,omitempty" json:"waitlist_entry_id,omitempty" xml:"waitlist_entry_id,omitempty"`
}

// DeleteWaitlistEntryRequestBody is the type of the "waitlist" service
// "delete_waitlist_entry" endpoint HTTP request body.
type DeleteWaitlistEntryRequestBody struct {
	WaitlistEntryID *string `form:"waitlist_entry_id,omitempty" json:"waitlist_entry_id,omitempty" xml:"waitlist_entry_id,omitempty"`
}

// BatchGetWaitEstimatesResponseBody is the type of the "waitlist" service
// "batch_get_wait_estimates" endpoint HTTP response body.
type BatchGetWaitEstimatesResponseBody struct {
	WaitlistStatus string                      `form:"waitlist_status" json:"waitlist_status" xml:"waitlist_status"`
	WaitEstimate   []*WaitEstimateResponseBody `form:"wait_estimate,omitempty" json:"wait_estimate,omitempty" xml:"wait_estimate,omitempty"`
}

// CreateWaitlistEntryResponseBody is the type of the "waitlist" service
// "create_waitlist_entry" endpoint HTTP response body.
type CreateWaitlistEntryResponseBody struct {
	WaitlistEntryID              *string                                   `form:"waitlist_entry_id,omitempty" json:"waitlist_entry_id,omitempty" xml:"waitlist_entry_id,omitempty"`
	WaitlistBusinessLogicFailure *WaitlistBusinessLogicFailureResponseBody `form:"waitlist_business_logic_failure,omitempty" json:"waitlist_business_logic_failure,omitempty" xml:"waitlist_business_logic_failure,omitempty"`
}

// GetWaitlistEntryResponseBody is the type of the "waitlist" service
// "get_waitlist_entry" endpoint HTTP response body.
type GetWaitlistEntryResponseBody struct {
	WaitlistEntry *WaitlistEntryResponseBody `form:"waitlist_entry" json:"waitlist_entry" xml:"waitlist_entry"`
}

// BatchGetWaitEstimatesBadRequestResponseBody is the type of the "waitlist"
// service "batch_get_wait_estimates" endpoint HTTP response body for the
// "bad_request" error.
type BatchGetWaitEstimatesBadRequestResponseBody struct {
	// Name is the name of this class of errors.
	Name string `form:"name" json:"name" xml:"name"`
	// ID is a unique identifier for this particular occurrence of the problem.
	ID string `form:"id" json:"id" xml:"id"`
	// Message is a human-readable explanation specific to this occurrence of the
	// problem.
	Message string `form:"message" json:"message" xml:"message"`
	// Is the error temporary?
	Temporary bool `form:"temporary" json:"temporary" xml:"temporary"`
	// Is the error a timeout?
	Timeout bool `form:"timeout" json:"timeout" xml:"timeout"`
	// Is the error a server-side fault?
	Fault bool `form:"fault" json:"fault" xml:"fault"`
}

// BatchGetWaitEstimatesUnauthorizedResponseBody is the type of the "waitlist"
// service "batch_get_wait_estimates" endpoint HTTP response body for the
// "unauthorized" error.
type BatchGetWaitEstimatesUnauthorizedResponseBody struct {
	// Name is the name of this class of errors.
	Name string `form:"name" json:"name" xml:"name"`
	// ID is a unique identifier for this particular occurrence of the problem.
	ID string `form:"id" json:"id" xml:"id"`
	// Message is a human-readable explanation specific to this occurrence of the
	// problem.
	Message string `form:"message" json:"message" xml:"message"`
	// Is the error temporary?
	Temporary bool `form:"temporary" json:"temporary" xml:"temporary"`
	// Is the error a timeout?
	Timeout bool `form:"timeout" json:"timeout" xml:"timeout"`
	// Is the error a server-side fault?
	Fault bool `form:"fault" json:"fault" xml:"fault"`
}

// BatchGetWaitEstimatesForbiddenResponseBody is the type of the "waitlist"
// service "batch_get_wait_estimates" endpoint HTTP response body for the
// "forbidden" error.
type BatchGetWaitEstimatesForbiddenResponseBody struct {
	// Name is the name of this class of errors.
	Name string `form:"name" json:"name" xml:"name"`
	// ID is a unique identifier for this particular occurrence of the problem.
	ID string `form:"id" json:"id" xml:"id"`
	// Message is a human-readable explanation specific to this occurrence of the
	// problem.
	Message string `form:"message" json:"message" xml:"message"`
	// Is the error temporary?
	Temporary bool `form:"temporary" json:"temporary" xml:"temporary"`
	// Is the error a timeout?
	Timeout bool `form:"timeout" json:"timeout" xml:"timeout"`
	// Is the error a server-side fault?
	Fault bool `form:"fault" json:"fault" xml:"fault"`
}

// BatchGetWaitEstimatesNotFoundResponseBody is the type of the "waitlist"
// service "batch_get_wait_estimates" endpoint HTTP response body for the
// "not_found" error.
type BatchGetWaitEstimatesNotFoundResponseBody struct {
	// Name is the name of this class of errors.
	Name string `form:"name" json:"name" xml:"name"`
	// ID is a unique identifier for this particular occurrence of the problem.
	ID string `form:"id" json:"id" xml:"id"`
	// Message is a human-readable explanation specific to this occurrence of the
	// problem.
	Message string `form:"message" json:"message" xml:"message"`
	// Is the error temporary?
	Temporary bool `form:"temporary" json:"temporary" xml:"temporary"`
	// Is the error a timeout?
	Timeout bool `form:"timeout" json:"timeout" xml:"timeout"`
	// Is the error a server-side fault?
	Fault bool `form:"fault" json:"fault" xml:"fault"`
}

// BatchGetWaitEstimatesConflictResponseBody is the type of the "waitlist"
// service "batch_get_wait_estimates" endpoint HTTP response body for the
// "conflict" error.
type BatchGetWaitEstimatesConflictResponseBody struct {
	// Name is the name of this class of errors.
	Name string `form:"name" json:"name" xml:"name"`
	// ID is a unique identifier for this particular occurrence of the problem.
	ID string `form:"id" json:"id" xml:"id"`
	// Message is a human-readable explanation specific to this occurrence of the
	// problem.
	Message string `form:"message" json:"message" xml:"message"`
	// Is the error temporary?
	Temporary bool `form:"temporary" json:"temporary" xml:"temporary"`
	// Is the error a timeout?
	Timeout bool `form:"timeout" json:"timeout" xml:"timeout"`
	// Is the error a server-side fault?
	Fault bool `form:"fault" json:"fault" xml:"fault"`
}

// BatchGetWaitEstimatesTooManyRequestsResponseBody is the type of the
// "waitlist" service "batch_get_wait_estimates" endpoint HTTP response body
// for the "too_many_requests" error.
type BatchGetWaitEstimatesTooManyRequestsResponseBody struct {
	// Name is the name of this class of errors.
	Name string `form:"name" json:"name" xml:"name"`
	// ID is a unique identifier for this particular occurrence of the problem.
	ID string `form:"id" json:"id" xml:"id"`
	// Message is a human-readable explanation specific to this occurrence of the
	// problem.
	Message string `form:"message" json:"message" xml:"message"`
	// Is the error temporary?
	Temporary bool `form:"temporary" json:"temporary" xml:"temporary"`
	// Is the error a timeout?
	Timeout bool `form:"timeout" json:"timeout" xml:"timeout"`
	// Is the error a server-side fault?
	Fault bool `form:"fault" json:"fault" xml:"fault"`
}

// BatchGetWaitEstimatesClientClosedRequestResponseBody is the type of the
// "waitlist" service "batch_get_wait_estimates" endpoint HTTP response body
// for the "client_closed_request" error.
type BatchGetWaitEstimatesClientClosedRequestResponseBody struct {
	// Name is the name of this class of errors.
	Name string `form:"name" json:"name" xml:"name"`
	// ID is a unique identifier for this particular occurrence of the problem.
	ID string `form:"id" json:"id" xml:"id"`
	// Message is a human-readable explanation specific to this occurrence of the
	// problem.
	Message string `form:"message" json:"message" xml:"message"`
	// Is the error temporary?
	Temporary bool `form:"temporary" json:"temporary" xml:"temporary"`
	// Is the error a timeout?
	Timeout bool `form:"timeout" json:"timeout" xml:"timeout"`
	// Is the error a server-side fault?
	Fault bool `form:"fault" json:"fault" xml:"fault"`
}

// BatchGetWaitEstimatesInternalServerErrorResponseBody is the type of the
// "waitlist" service "batch_get_wait_estimates" endpoint HTTP response body
// for the "internal_server_error" error.
type BatchGetWaitEstimatesInternalServerErrorResponseBody struct {
	// Name is the name of this class of errors.
	Name string `form:"name" json:"name" xml:"name"`
	// ID is a unique identifier for this particular occurrence of the problem.
	ID string `form:"id" json:"id" xml:"id"`
	// Message is a human-readable explanation specific to this occurrence of the
	// problem.
	Message string `form:"message" json:"message" xml:"message"`
	// Is the error temporary?
	Temporary bool `form:"temporary" json:"temporary" xml:"temporary"`
	// Is the error a timeout?
	Timeout bool `form:"timeout" json:"timeout" xml:"timeout"`
	// Is the error a server-side fault?
	Fault bool `form:"fault" json:"fault" xml:"fault"`
}

// BatchGetWaitEstimatesNotImplementedResponseBody is the type of the
// "waitlist" service "batch_get_wait_estimates" endpoint HTTP response body
// for the "not_implemented" error.
type BatchGetWaitEstimatesNotImplementedResponseBody struct {
	// Name is the name of this class of errors.
	Name string `form:"name" json:"name" xml:"name"`
	// ID is a unique identifier for this particular occurrence of the problem.
	ID string `form:"id" json:"id" xml:"id"`
	// Message is a human-readable explanation specific to this occurrence of the
	// problem.
	Message string `form:"message" json:"message" xml:"message"`
	// Is the error temporary?
	Temporary bool `form:"temporary" json:"temporary" xml:"temporary"`
	// Is the error a timeout?
	Timeout bool `form:"timeout" json:"timeout" xml:"timeout"`
	// Is the error a server-side fault?
	Fault bool `form:"fault" json:"fault" xml:"fault"`
}

// BatchGetWaitEstimatesServiceUnavailableResponseBody is the type of the
// "waitlist" service "batch_get_wait_estimates" endpoint HTTP response body
// for the "service_unavailable" error.
type BatchGetWaitEstimatesServiceUnavailableResponseBody struct {
	// Name is the name of this class of errors.
	Name string `form:"name" json:"name" xml:"name"`
	// ID is a unique identifier for this particular occurrence of the problem.
	ID string `form:"id" json:"id" xml:"id"`
	// Message is a human-readable explanation specific to this occurrence of the
	// problem.
	Message string `form:"message" json:"message" xml:"message"`
	// Is the error temporary?
	Temporary bool `form:"temporary" json:"temporary" xml:"temporary"`
	// Is the error a timeout?
	Timeout bool `form:"timeout" json:"timeout" xml:"timeout"`
	// Is the error a server-side fault?
	Fault bool `form:"fault" json:"fault" xml:"fault"`
}

// BatchGetWaitEstimatesGatewayTimeoutResponseBody is the type of the
// "waitlist" service "batch_get_wait_estimates" endpoint HTTP response body
// for the "gateway_timeout" error.
type BatchGetWaitEstimatesGatewayTimeoutResponseBody struct {
	// Name is the name of this class of errors.
	Name string `form:"name" json:"name" xml:"name"`
	// ID is a unique identifier for this particular occurrence of the problem.
	ID string `form:"id" json:"id" xml:"id"`
	// Message is a human-readable explanation specific to this occurrence of the
	// problem.
	Message string `form:"message" json:"message" xml:"message"`
	// Is the error temporary?
	Temporary bool `form:"temporary" json:"temporary" xml:"temporary"`
	// Is the error a timeout?
	Timeout bool `form:"timeout" json:"timeout" xml:"timeout"`
	// Is the error a server-side fault?
	Fault bool `form:"fault" json:"fault" xml:"fault"`
}

// CreateWaitlistEntryBadRequestResponseBody is the type of the "waitlist"
// service "create_waitlist_entry" endpoint HTTP response body for the
// "bad_request" error.
type CreateWaitlistEntryBadRequestResponseBody struct {
	// Name is the name of this class of errors.
	Name string `form:"name" json:"name" xml:"name"`
	// ID is a unique identifier for this particular occurrence of the problem.
	ID string `form:"id" json:"id" xml:"id"`
	// Message is a human-readable explanation specific to this occurrence of the
	// problem.
	Message string `form:"message" json:"message" xml:"message"`
	// Is the error temporary?
	Temporary bool `form:"temporary" json:"temporary" xml:"temporary"`
	// Is the error a timeout?
	Timeout bool `form:"timeout" json:"timeout" xml:"timeout"`
	// Is the error a server-side fault?
	Fault bool `form:"fault" json:"fault" xml:"fault"`
}

// CreateWaitlistEntryUnauthorizedResponseBody is the type of the "waitlist"
// service "create_waitlist_entry" endpoint HTTP response body for the
// "unauthorized" error.
type CreateWaitlistEntryUnauthorizedResponseBody struct {
	// Name is the name of this class of errors.
	Name string `form:"name" json:"name" xml:"name"`
	// ID is a unique identifier for this particular occurrence of the problem.
	ID string `form:"id" json:"id" xml:"id"`
	// Message is a human-readable explanation specific to this occurrence of the
	// problem.
	Message string `form:"message" json:"message" xml:"message"`
	// Is the error temporary?
	Temporary bool `form:"temporary" json:"temporary" xml:"temporary"`
	// Is the error a timeout?
	Timeout bool `form:"timeout" json:"timeout" xml:"timeout"`
	// Is the error a server-side fault?
	Fault bool `form:"fault" json:"fault" xml:"fault"`
}

// CreateWaitlistEntryForbiddenResponseBody is the type of the "waitlist"
// service "create_waitlist_entry" endpoint HTTP response body for the
// "forbidden" error.
type CreateWaitlistEntryForbiddenResponseBody struct {
	// Name is the name of this class of errors.
	Name string `form:"name" json:"name" xml:"name"`
	// ID is a unique identifier for this particular occurrence of the problem.
	ID string `form:"id" json:"id" xml:"id"`
	// Message is a human-readable explanation specific to this occurrence of the
	// problem.
	Message string `form:"message" json:"message" xml:"message"`
	// Is the error temporary?
	Temporary bool `form:"temporary" json:"temporary" xml:"temporary"`
	// Is the error a timeout?
	Timeout bool `form:"timeout" json:"timeout" xml:"timeout"`
	// Is the error a server-side fault?
	Fault bool `form:"fault" json:"fault" xml:"fault"`
}

// CreateWaitlistEntryNotFoundResponseBody is the type of the "waitlist"
// service "create_waitlist_entry" endpoint HTTP response body for the
// "not_found" error.
type CreateWaitlistEntryNotFoundResponseBody struct {
	// Name is the name of this class of errors.
	Name string `form:"name" json:"name" xml:"name"`
	// ID is a unique identifier for this particular occurrence of the problem.
	ID string `form:"id" json:"id" xml:"id"`
	// Message is a human-readable explanation specific to this occurrence of the
	// problem.
	Message string `form:"message" json:"message" xml:"message"`
	// Is the error temporary?
	Temporary bool `form:"temporary" json:"temporary" xml:"temporary"`
	// Is the error a timeout?
	Timeout bool `form:"timeout" json:"timeout" xml:"timeout"`
	// Is the error a server-side fault?
	Fault bool `form:"fault" json:"fault" xml:"fault"`
}

// CreateWaitlistEntryConflictResponseBody is the type of the "waitlist"
// service "create_waitlist_entry" endpoint HTTP response body for the
// "conflict" error.
type CreateWaitlistEntryConflictResponseBody struct {
	// Name is the name of this class of errors.
	Name string `form:"name" json:"name" xml:"name"`
	// ID is a unique identifier for this particular occurrence of the problem.
	ID string `form:"id" json:"id" xml:"id"`
	// Message is a human-readable explanation specific to this occurrence of the
	// problem.
	Message string `form:"message" json:"message" xml:"message"`
	// Is the error temporary?
	Temporary bool `form:"temporary" json:"temporary" xml:"temporary"`
	// Is the error a timeout?
	Timeout bool `form:"timeout" json:"timeout" xml:"timeout"`
	// Is the error a server-side fault?
	Fault bool `form:"fault" json:"fault" xml:"fault"`
}

// CreateWaitlistEntryTooManyRequestsResponseBody is the type of the "waitlist"
// service "create_waitlist_entry" endpoint HTTP response body for the
// "too_many_requests" error.
type CreateWaitlistEntryTooManyRequestsResponseBody struct {
	// Name is the name of this class of errors.
	Name string `form:"name" json:"name" xml:"name"`
	// ID is a unique identifier for this particular occurrence of the problem.
	ID string `form:"id" json:"id" xml:"id"`
	// Message is a human-readable explanation specific to this occurrence of the
	// problem.
	Message string `form:"message" json:"message" xml:"message"`
	// Is the error temporary?
	Temporary bool `form:"temporary" json:"temporary" xml:"temporary"`
	// Is the error a timeout?
	Timeout bool `form:"timeout" json:"timeout" xml:"timeout"`
	// Is the error a server-side fault?
	Fault bool `form:"fault" json:"fault" xml:"fault"`
}

// CreateWaitlistEntryClientClosedRequestResponseBody is the type of the
// "waitlist" service "create_waitlist_entry" endpoint HTTP response body for
// the "client_closed_request" error.
type CreateWaitlistEntryClientClosedRequestResponseBody struct {
	// Name is the name of this class of errors.
	Name string `form:"name" json:"name" xml:"name"`
	// ID is a unique identifier for this particular occurrence of the problem.
	ID string `form:"id" json:"id" xml:"id"`
	// Message is a human-readable explanation specific to this occurrence of the
	// problem.
	Message string `form:"message" json:"message" xml:"message"`
	// Is the error temporary?
	Temporary bool `form:"temporary" json:"temporary" xml:"temporary"`
	// Is the error a timeout?
	Timeout bool `form:"timeout" json:"timeout" xml:"timeout"`
	// Is the error a server-side fault?
	Fault bool `form:"fault" json:"fault" xml:"fault"`
}

// CreateWaitlistEntryInternalServerErrorResponseBody is the type of the
// "waitlist" service "create_waitlist_entry" endpoint HTTP response body for
// the "internal_server_error" error.
type CreateWaitlistEntryInternalServerErrorResponseBody struct {
	// Name is the name of this class of errors.
	Name string `form:"name" json:"name" xml:"name"`
	// ID is a unique identifier for this particular occurrence of the problem.
	ID string `form:"id" json:"id" xml:"id"`
	// Message is a human-readable explanation specific to this occurrence of the
	// problem.
	Message string `form:"message" json:"message" xml:"message"`
	// Is the error temporary?
	Temporary bool `form:"temporary" json:"temporary" xml:"temporary"`
	// Is the error a timeout?
	Timeout bool `form:"timeout" json:"timeout" xml:"timeout"`
	// Is the error a server-side fault?
	Fault bool `form:"fault" json:"fault" xml:"fault"`
}

// CreateWaitlistEntryNotImplementedResponseBody is the type of the "waitlist"
// service "create_waitlist_entry" endpoint HTTP response body for the
// "not_implemented" error.
type CreateWaitlistEntryNotImplementedResponseBody struct {
	// Name is the name of this class of errors.
	Name string `form:"name" json:"name" xml:"name"`
	// ID is a unique identifier for this particular occurrence of the problem.
	ID string `form:"id" json:"id" xml:"id"`
	// Message is a human-readable explanation specific to this occurrence of the
	// problem.
	Message string `form:"message" json:"message" xml:"message"`
	// Is the error temporary?
	Temporary bool `form:"temporary" json:"temporary" xml:"temporary"`
	// Is the error a timeout?
	Timeout bool `form:"timeout" json:"timeout" xml:"timeout"`
	// Is the error a server-side fault?
	Fault bool `form:"fault" json:"fault" xml:"fault"`
}

// CreateWaitlistEntryServiceUnavailableResponseBody is the type of the
// "waitlist" service "create_waitlist_entry" endpoint HTTP response body for
// the "service_unavailable" error.
type CreateWaitlistEntryServiceUnavailableResponseBody struct {
	// Name is the name of this class of errors.
	Name string `form:"name" json:"name" xml:"name"`
	// ID is a unique identifier for this particular occurrence of the problem.
	ID string `form:"id" json:"id" xml:"id"`
	// Message is a human-readable explanation specific to this occurrence of the
	// problem.
	Message string `form:"message" json:"message" xml:"message"`
	// Is the error temporary?
	Temporary bool `form:"temporary" json:"temporary" xml:"temporary"`
	// Is the error a timeout?
	Timeout bool `form:"timeout" json:"timeout" xml:"timeout"`
	// Is the error a server-side fault?
	Fault bool `form:"fault" json:"fault" xml:"fault"`
}

// CreateWaitlistEntryGatewayTimeoutResponseBody is the type of the "waitlist"
// service "create_waitlist_entry" endpoint HTTP response body for the
// "gateway_timeout" error.
type CreateWaitlistEntryGatewayTimeoutResponseBody struct {
	// Name is the name of this class of errors.
	Name string `form:"name" json:"name" xml:"name"`
	// ID is a unique identifier for this particular occurrence of the problem.
	ID string `form:"id" json:"id" xml:"id"`
	// Message is a human-readable explanation specific to this occurrence of the
	// problem.
	Message string `form:"message" json:"message" xml:"message"`
	// Is the error temporary?
	Temporary bool `form:"temporary" json:"temporary" xml:"temporary"`
	// Is the error a timeout?
	Timeout bool `form:"timeout" json:"timeout" xml:"timeout"`
	// Is the error a server-side fault?
	Fault bool `form:"fault" json:"fault" xml:"fault"`
}

// GetWaitlistEntryBadRequestResponseBody is the type of the "waitlist" service
// "get_waitlist_entry" endpoint HTTP response body for the "bad_request" error.
type GetWaitlistEntryBadRequestResponseBody struct {
	// Name is the name of this class of errors.
	Name string `form:"name" json:"name" xml:"name"`
	// ID is a unique identifier for this particular occurrence of the problem.
	ID string `form:"id" json:"id" xml:"id"`
	// Message is a human-readable explanation specific to this occurrence of the
	// problem.
	Message string `form:"message" json:"message" xml:"message"`
	// Is the error temporary?
	Temporary bool `form:"temporary" json:"temporary" xml:"temporary"`
	// Is the error a timeout?
	Timeout bool `form:"timeout" json:"timeout" xml:"timeout"`
	// Is the error a server-side fault?
	Fault bool `form:"fault" json:"fault" xml:"fault"`
}

// GetWaitlistEntryUnauthorizedResponseBody is the type of the "waitlist"
// service "get_waitlist_entry" endpoint HTTP response body for the
// "unauthorized" error.
type GetWaitlistEntryUnauthorizedResponseBody struct {
	// Name is the name of this class of errors.
	Name string `form:"name" json:"name" xml:"name"`
	// ID is a unique identifier for this particular occurrence of the problem.
	ID string `form:"id" json:"id" xml:"id"`
	// Message is a human-readable explanation specific to this occurrence of the
	// problem.
	Message string `form:"message" json:"message" xml:"message"`
	// Is the error temporary?
	Temporary bool `form:"temporary" json:"temporary" xml:"temporary"`
	// Is the error a timeout?
	Timeout bool `form:"timeout" json:"timeout" xml:"timeout"`
	// Is the error a server-side fault?
	Fault bool `form:"fault" json:"fault" xml:"fault"`
}

// GetWaitlistEntryForbiddenResponseBody is the type of the "waitlist" service
// "get_waitlist_entry" endpoint HTTP response body for the "forbidden" error.
type GetWaitlistEntryForbiddenResponseBody struct {
	// Name is the name of this class of errors.
	Name string `form:"name" json:"name" xml:"name"`
	// ID is a unique identifier for this particular occurrence of the problem.
	ID string `form:"id" json:"id" xml:"id"`
	// Message is a human-readable explanation specific to this occurrence of the
	// problem.
	Message string `form:"message" json:"message" xml:"message"`
	// Is the error temporary?
	Temporary bool `form:"temporary" json:"temporary" xml:"temporary"`
	// Is the error a timeout?
	Timeout bool `form:"timeout" json:"timeout" xml:"timeout"`
	// Is the error a server-side fault?
	Fault bool `form:"fault" json:"fault" xml:"fault"`
}

// GetWaitlistEntryNotFoundResponseBody is the type of the "waitlist" service
// "get_waitlist_entry" endpoint HTTP response body for the "not_found" error.
type GetWaitlistEntryNotFoundResponseBody struct {
	// Name is the name of this class of errors.
	Name string `form:"name" json:"name" xml:"name"`
	// ID is a unique identifier for this particular occurrence of the problem.
	ID string `form:"id" json:"id" xml:"id"`
	// Message is a human-readable explanation specific to this occurrence of the
	// problem.
	Message string `form:"message" json:"message" xml:"message"`
	// Is the error temporary?
	Temporary bool `form:"temporary" json:"temporary" xml:"temporary"`
	// Is the error a timeout?
	Timeout bool `form:"timeout" json:"timeout" xml:"timeout"`
	// Is the error a server-side fault?
	Fault bool `form:"fault" json:"fault" xml:"fault"`
}

// GetWaitlistEntryConflictResponseBody is the type of the "waitlist" service
// "get_waitlist_entry" endpoint HTTP response body for the "conflict" error.
type GetWaitlistEntryConflictResponseBody struct {
	// Name is the name of this class of errors.
	Name string `form:"name" json:"name" xml:"name"`
	// ID is a unique identifier for this particular occurrence of the problem.
	ID string `form:"id" json:"id" xml:"id"`
	// Message is a human-readable explanation specific to this occurrence of the
	// problem.
	Message string `form:"message" json:"message" xml:"message"`
	// Is the error temporary?
	Temporary bool `form:"temporary" json:"temporary" xml:"temporary"`
	// Is the error a timeout?
	Timeout bool `form:"timeout" json:"timeout" xml:"timeout"`
	// Is the error a server-side fault?
	Fault bool `form:"fault" json:"fault" xml:"fault"`
}

// GetWaitlistEntryTooManyRequestsResponseBody is the type of the "waitlist"
// service "get_waitlist_entry" endpoint HTTP response body for the
// "too_many_requests" error.
type GetWaitlistEntryTooManyRequestsResponseBody struct {
	// Name is the name of this class of errors.
	Name string `form:"name" json:"name" xml:"name"`
	// ID is a unique identifier for this particular occurrence of the problem.
	ID string `form:"id" json:"id" xml:"id"`
	// Message is a human-readable explanation specific to this occurrence of the
	// problem.
	Message string `form:"message" json:"message" xml:"message"`
	// Is the error temporary?
	Temporary bool `form:"temporary" json:"temporary" xml:"temporary"`
	// Is the error a timeout?
	Timeout bool `form:"timeout" json:"timeout" xml:"timeout"`
	// Is the error a server-side fault?
	Fault bool `form:"fault" json:"fault" xml:"fault"`
}

// GetWaitlistEntryClientClosedRequestResponseBody is the type of the
// "waitlist" service "get_waitlist_entry" endpoint HTTP response body for the
// "client_closed_request" error.
type GetWaitlistEntryClientClosedRequestResponseBody struct {
	// Name is the name of this class of errors.
	Name string `form:"name" json:"name" xml:"name"`
	// ID is a unique identifier for this particular occurrence of the problem.
	ID string `form:"id" json:"id" xml:"id"`
	// Message is a human-readable explanation specific to this occurrence of the
	// problem.
	Message string `form:"message" json:"message" xml:"message"`
	// Is the error temporary?
	Temporary bool `form:"temporary" json:"temporary" xml:"temporary"`
	// Is the error a timeout?
	Timeout bool `form:"timeout" json:"timeout" xml:"timeout"`
	// Is the error a server-side fault?
	Fault bool `form:"fault" json:"fault" xml:"fault"`
}

// GetWaitlistEntryInternalServerErrorResponseBody is the type of the
// "waitlist" service "get_waitlist_entry" endpoint HTTP response body for the
// "internal_server_error" error.
type GetWaitlistEntryInternalServerErrorResponseBody struct {
	// Name is the name of this class of errors.
	Name string `form:"name" json:"name" xml:"name"`
	// ID is a unique identifier for this particular occurrence of the problem.
	ID string `form:"id" json:"id" xml:"id"`
	// Message is a human-readable explanation specific to this occurrence of the
	// problem.
	Message string `form:"message" json:"message" xml:"message"`
	// Is the error temporary?
	Temporary bool `form:"temporary" json:"temporary" xml:"temporary"`
	// Is the error a timeout?
	Timeout bool `form:"timeout" json:"timeout" xml:"timeout"`
	// Is the error a server-side fault?
	Fault bool `form:"fault" json:"fault" xml:"fault"`
}

// GetWaitlistEntryNotImplementedResponseBody is the type of the "waitlist"
// service "get_waitlist_entry" endpoint HTTP response body for the
// "not_implemented" error.
type GetWaitlistEntryNotImplementedResponseBody struct {
	// Name is the name of this class of errors.
	Name string `form:"name" json:"name" xml:"name"`
	// ID is a unique identifier for this particular occurrence of the problem.
	ID string `form:"id" json:"id" xml:"id"`
	// Message is a human-readable explanation specific to this occurrence of the
	// problem.
	Message string `form:"message" json:"message" xml:"message"`
	// Is the error temporary?
	Temporary bool `form:"temporary" json:"temporary" xml:"temporary"`
	// Is the error a timeout?
	Timeout bool `form:"timeout" json:"timeout" xml:"timeout"`
	// Is the error a server-side fault?
	Fault bool `form:"fault" json:"fault" xml:"fault"`
}

// GetWaitlistEntryServiceUnavailableResponseBody is the type of the "waitlist"
// service "get_waitlist_entry" endpoint HTTP response body for the
// "service_unavailable" error.
type GetWaitlistEntryServiceUnavailableResponseBody struct {
	// Name is the name of this class of errors.
	Name string `form:"name" json:"name" xml:"name"`
	// ID is a unique identifier for this particular occurrence of the problem.
	ID string `form:"id" json:"id" xml:"id"`
	// Message is a human-readable explanation specific to this occurrence of the
	// problem.
	Message string `form:"message" json:"message" xml:"message"`
	// Is the error temporary?
	Temporary bool `form:"temporary" json:"temporary" xml:"temporary"`
	// Is the error a timeout?
	Timeout bool `form:"timeout" json:"timeout" xml:"timeout"`
	// Is the error a server-side fault?
	Fault bool `form:"fault" json:"fault" xml:"fault"`
}

// GetWaitlistEntryGatewayTimeoutResponseBody is the type of the "waitlist"
// service "get_waitlist_entry" endpoint HTTP response body for the
// "gateway_timeout" error.
type GetWaitlistEntryGatewayTimeoutResponseBody struct {
	// Name is the name of this class of errors.
	Name string `form:"name" json:"name" xml:"name"`
	// ID is a unique identifier for this particular occurrence of the problem.
	ID string `form:"id" json:"id" xml:"id"`
	// Message is a human-readable explanation specific to this occurrence of the
	// problem.
	Message string `form:"message" json:"message" xml:"message"`
	// Is the error temporary?
	Temporary bool `form:"temporary" json:"temporary" xml:"temporary"`
	// Is the error a timeout?
	Timeout bool `form:"timeout" json:"timeout" xml:"timeout"`
	// Is the error a server-side fault?
	Fault bool `form:"fault" json:"fault" xml:"fault"`
}

// DeleteWaitlistEntryBadRequestResponseBody is the type of the "waitlist"
// service "delete_waitlist_entry" endpoint HTTP response body for the
// "bad_request" error.
type DeleteWaitlistEntryBadRequestResponseBody struct {
	// Name is the name of this class of errors.
	Name string `form:"name" json:"name" xml:"name"`
	// ID is a unique identifier for this particular occurrence of the problem.
	ID string `form:"id" json:"id" xml:"id"`
	// Message is a human-readable explanation specific to this occurrence of the
	// problem.
	Message string `form:"message" json:"message" xml:"message"`
	// Is the error temporary?
	Temporary bool `form:"temporary" json:"temporary" xml:"temporary"`
	// Is the error a timeout?
	Timeout bool `form:"timeout" json:"timeout" xml:"timeout"`
	// Is the error a server-side fault?
	Fault bool `form:"fault" json:"fault" xml:"fault"`
}

// DeleteWaitlistEntryUnauthorizedResponseBody is the type of the "waitlist"
// service "delete_waitlist_entry" endpoint HTTP response body for the
// "unauthorized" error.
type DeleteWaitlistEntryUnauthorizedResponseBody struct {
	// Name is the name of this class of errors.
	Name string `form:"name" json:"name" xml:"name"`
	// ID is a unique identifier for this particular occurrence of the problem.
	ID string `form:"id" json:"id" xml:"id"`
	// Message is a human-readable explanation specific to this occurrence of the
	// problem.
	Message string `form:"message" json:"message" xml:"message"`
	// Is the error temporary?
	Temporary bool `form:"temporary" json:"temporary" xml:"temporary"`
	// Is the error a timeout?
	Timeout bool `form:"timeout" json:"timeout" xml:"timeout"`
	// Is the error a server-side fault?
	Fault bool `form:"fault" json:"fault" xml:"fault"`
}

// DeleteWaitlistEntryForbiddenResponseBody is the type of the "waitlist"
// service "delete_waitlist_entry" endpoint HTTP response body for the
// "forbidden" error.
type DeleteWaitlistEntryForbiddenResponseBody struct {
	// Name is the name of this class of errors.
	Name string `form:"name" json:"name" xml:"name"`
	// ID is a unique identifier for this particular occurrence of the problem.
	ID string `form:"id" json:"id" xml:"id"`
	// Message is a human-readable explanation specific to this occurrence of the
	// problem.
	Message string `form:"message" json:"message" xml:"message"`
	// Is the error temporary?
	Temporary bool `form:"temporary" json:"temporary" xml:"temporary"`
	// Is the error a timeout?
	Timeout bool `form:"timeout" json:"timeout" xml:"timeout"`
	// Is the error a server-side fault?
	Fault bool `form:"fault" json:"fault" xml:"fault"`
}

// DeleteWaitlistEntryNotFoundResponseBody is the type of the "waitlist"
// service "delete_waitlist_entry" endpoint HTTP response body for the
// "not_found" error.
type DeleteWaitlistEntryNotFoundResponseBody struct {
	// Name is the name of this class of errors.
	Name string `form:"name" json:"name" xml:"name"`
	// ID is a unique identifier for this particular occurrence of the problem.
	ID string `form:"id" json:"id" xml:"id"`
	// Message is a human-readable explanation specific to this occurrence of the
	// problem.
	Message string `form:"message" json:"message" xml:"message"`
	// Is the error temporary?
	Temporary bool `form:"temporary" json:"temporary" xml:"temporary"`
	// Is the error a timeout?
	Timeout bool `form:"timeout" json:"timeout" xml:"timeout"`
	// Is the error a server-side fault?
	Fault bool `form:"fault" json:"fault" xml:"fault"`
}

// DeleteWaitlistEntryConflictResponseBody is the type of the "waitlist"
// service "delete_waitlist_entry" endpoint HTTP response body for the
// "conflict" error.
type DeleteWaitlistEntryConflictResponseBody struct {
	// Name is the name of this class of errors.
	Name string `form:"name" json:"name" xml:"name"`
	// ID is a unique identifier for this particular occurrence of the problem.
	ID string `form:"id" json:"id" xml:"id"`
	// Message is a human-readable explanation specific to this occurrence of the
	// problem.
	Message string `form:"message" json:"message" xml:"message"`
	// Is the error temporary?
	Temporary bool `form:"temporary" json:"temporary" xml:"temporary"`
	// Is the error a timeout?
	Timeout bool `form:"timeout" json:"timeout" xml:"timeout"`
	// Is the error a server-side fault?
	Fault bool `form:"fault" json:"fault" xml:"fault"`
}

// DeleteWaitlistEntryTooManyRequestsResponseBody is the type of the "waitlist"
// service "delete_waitlist_entry" endpoint HTTP response body for the
// "too_many_requests" error.
type DeleteWaitlistEntryTooManyRequestsResponseBody struct {
	// Name is the name of this class of errors.
	Name string `form:"name" json:"name" xml:"name"`
	// ID is a unique identifier for this particular occurrence of the problem.
	ID string `form:"id" json:"id" xml:"id"`
	// Message is a human-readable explanation specific to this occurrence of the
	// problem.
	Message string `form:"message" json:"message" xml:"message"`
	// Is the error temporary?
	Temporary bool `form:"temporary" json:"temporary" xml:"temporary"`
	// Is the error a timeout?
	Timeout bool `form:"timeout" json:"timeout" xml:"timeout"`
	// Is the error a server-side fault?
	Fault bool `form:"fault" json:"fault" xml:"fault"`
}

// DeleteWaitlistEntryClientClosedRequestResponseBody is the type of the
// "waitlist" service "delete_waitlist_entry" endpoint HTTP response body for
// the "client_closed_request" error.
type DeleteWaitlistEntryClientClosedRequestResponseBody struct {
	// Name is the name of this class of errors.
	Name string `form:"name" json:"name" xml:"name"`
	// ID is a unique identifier for this particular occurrence of the problem.
	ID string `form:"id" json:"id" xml:"id"`
	// Message is a human-readable explanation specific to this occurrence of the
	// problem.
	Message string `form:"message" json:"message" xml:"message"`
	// Is the error temporary?
	Temporary bool `form:"temporary" json:"temporary" xml:"temporary"`
	// Is the error a timeout?
	Timeout bool `form:"timeout" json:"timeout" xml:"timeout"`
	// Is the error a server-side fault?
	Fault bool `form:"fault" json:"fault" xml:"fault"`
}

// DeleteWaitlistEntryInternalServerErrorResponseBody is the type of the
// "waitlist" service "delete_waitlist_entry" endpoint HTTP response body for
// the "internal_server_error" error.
type DeleteWaitlistEntryInternalServerErrorResponseBody struct {
	// Name is the name of this class of errors.
	Name string `form:"name" json:"name" xml:"name"`
	// ID is a unique identifier for this particular occurrence of the problem.
	ID string `form:"id" json:"id" xml:"id"`
	// Message is a human-readable explanation specific to this occurrence of the
	// problem.
	Message string `form:"message" json:"message" xml:"message"`
	// Is the error temporary?
	Temporary bool `form:"temporary" json:"temporary" xml:"temporary"`
	// Is the error a timeout?
	Timeout bool `form:"timeout" json:"timeout" xml:"timeout"`
	// Is the error a server-side fault?
	Fault bool `form:"fault" json:"fault" xml:"fault"`
}

// DeleteWaitlistEntryNotImplementedResponseBody is the type of the "waitlist"
// service "delete_waitlist_entry" endpoint HTTP response body for the
// "not_implemented" error.
type DeleteWaitlistEntryNotImplementedResponseBody struct {
	// Name is the name of this class of errors.
	Name string `form:"name" json:"name" xml:"name"`
	// ID is a unique identifier for this particular occurrence of the problem.
	ID string `form:"id" json:"id" xml:"id"`
	// Message is a human-readable explanation specific to this occurrence of the
	// problem.
	Message string `form:"message" json:"message" xml:"message"`
	// Is the error temporary?
	Temporary bool `form:"temporary" json:"temporary" xml:"temporary"`
	// Is the error a timeout?
	Timeout bool `form:"timeout" json:"timeout" xml:"timeout"`
	// Is the error a server-side fault?
	Fault bool `form:"fault" json:"fault" xml:"fault"`
}

// DeleteWaitlistEntryServiceUnavailableResponseBody is the type of the
// "waitlist" service "delete_waitlist_entry" endpoint HTTP response body for
// the "service_unavailable" error.
type DeleteWaitlistEntryServiceUnavailableResponseBody struct {
	// Name is the name of this class of errors.
	Name string `form:"name" json:"name" xml:"name"`
	// ID is a unique identifier for this particular occurrence of the problem.
	ID string `form:"id" json:"id" xml:"id"`
	// Message is a human-readable explanation specific to this occurrence of the
	// problem.
	Message string `form:"message" json:"message" xml:"message"`
	// Is the error temporary?
	Temporary bool `form:"temporary" json:"temporary" xml:"temporary"`
	// Is the error a timeout?
	Timeout bool `form:"timeout" json:"timeout" xml:"timeout"`
	// Is the error a server-side fault?
	Fault bool `form:"fault" json:"fault" xml:"fault"`
}

// DeleteWaitlistEntryGatewayTimeoutResponseBody is the type of the "waitlist"
// service "delete_waitlist_entry" endpoint HTTP response body for the
// "gateway_timeout" error.
type DeleteWaitlistEntryGatewayTimeoutResponseBody struct {
	// Name is the name of this class of errors.
	Name string `form:"name" json:"name" xml:"name"`
	// ID is a unique identifier for this particular occurrence of the problem.
	ID string `form:"id" json:"id" xml:"id"`
	// Message is a human-readable explanation specific to this occurrence of the
	// problem.
	Message string `form:"message" json:"message" xml:"message"`
	// Is the error temporary?
	Temporary bool `form:"temporary" json:"temporary" xml:"temporary"`
	// Is the error a timeout?
	Timeout bool `form:"timeout" json:"timeout" xml:"timeout"`
	// Is the error a server-side fault?
	Fault bool `form:"fault" json:"fault" xml:"fault"`
}

// WaitEstimateResponseBody is used to define fields on response body types.
type WaitEstimateResponseBody struct {
	PartySize                int32                   `form:"party_size" json:"party_size" xml:"party_size"`
	WaitLength               *WaitLengthResponseBody `form:"wait_length,omitempty" json:"wait_length,omitempty" xml:"wait_length,omitempty"`
	WaitlistConfirmationMode string                  `form:"waitlist_confirmation_mode" json:"waitlist_confirmation_mode" xml:"waitlist_confirmation_mode"`
}

// WaitLengthResponseBody is used to define fields on response body types.
type WaitLengthResponseBody struct {
	PartiesAheadCount      int32                               `form:"parties_ahead_count" json:"parties_ahead_count" xml:"parties_ahead_count"`
	EstimatedSeatTimeRange *EstimatedSeatTimeRangeResponseBody `form:"estimated_seat_time_range" json:"estimated_seat_time_range" xml:"estimated_seat_time_range"`
}

// EstimatedSeatTimeRangeResponseBody is used to define fields on response body
// types.
type EstimatedSeatTimeRangeResponseBody struct {
	StartSeconds string `form:"start_seconds" json:"start_seconds" xml:"start_seconds"`
	EndSeconds   string `form:"end_seconds" json:"end_seconds" xml:"end_seconds"`
}

// WaitlistBusinessLogicFailureResponseBody is used to define fields on
// response body types.
type WaitlistBusinessLogicFailureResponseBody struct {
	Cause       string  `form:"cause" json:"cause" xml:"cause"`
	Description *string `form:"description,omitempty" json:"description,omitempty" xml:"description,omitempty"`
}

// WaitlistEntryResponseBody is used to define fields on response body types.
type WaitlistEntryResponseBody struct {
	WaitlistEntryState      string                               `form:"waitlist_entry_state" json:"waitlist_entry_state" xml:"waitlist_entry_state"`
	WaitlistEntryStateTimes *WaitlistEntryStateTimesResponseBody `form:"waitlist_entry_state_times" json:"waitlist_entry_state_times" xml:"waitlist_entry_state_times"`
	WaitEstimate            *WaitEstimateResponseBody            `form:"wait_estimate" json:"wait_estimate" xml:"wait_estimate"`
}

// WaitlistEntryStateTimesResponseBody is used to define fields on response
// body types.
type WaitlistEntryStateTimesResponseBody struct {
	CreatedTimeSeconds        string  `form:"created_time_seconds" json:"created_time_seconds" xml:"created_time_seconds"`
	CanceledTimeSeconds       *string `form:"canceled_time_seconds,omitempty" json:"canceled_time_seconds,omitempty" xml:"canceled_time_seconds,omitempty"`
	ServiceReadiedTimeSeconds *string `form:"service_readied_time_seconds,omitempty" json:"service_readied_time_seconds,omitempty" xml:"service_readied_time_seconds,omitempty"`
	CheckedInTimeSeconds      *string `form:"checked_in_time_seconds,omitempty" json:"checked_in_time_seconds,omitempty" xml:"checked_in_time_seconds,omitempty"`
	SeatedTimeSeconds         *string `form:"seated_time_seconds,omitempty" json:"seated_time_seconds,omitempty" xml:"seated_time_seconds,omitempty"`
	MarkedNoShowTimeSeconds   *string `form:"marked_no_show_time_seconds,omitempty" json:"marked_no_show_time_seconds,omitempty" xml:"marked_no_show_time_seconds,omitempty"`
}

// UserInformationRequestBodyRequestBody is used to define fields on request
// body types.
type UserInformationRequestBodyRequestBody struct {
	UserID       *string                              `form:"user_id,omitempty" json:"user_id,omitempty" xml:"user_id,omitempty"`
	GivenName    *string                              `form:"given_name,omitempty" json:"given_name,omitempty" xml:"given_name,omitempty"`
	FamilyName   *string                              `form:"family_name,omitempty" json:"family_name,omitempty" xml:"family_name,omitempty"`
	Address      *PostalAddressRequestBodyRequestBody `form:"address,omitempty" json:"address,omitempty" xml:"address,omitempty"`
	Telephone    *string                              `form:"telephone,omitempty" json:"telephone,omitempty" xml:"telephone,omitempty"`
	Email        *string                              `form:"email,omitempty" json:"email,omitempty" xml:"email,omitempty"`
	LanguageCode *string                              `form:"language_code,omitempty" json:"language_code,omitempty" xml:"language_code,omitempty"`
}

// PostalAddressRequestBodyRequestBody is used to define fields on request body
// types.
type PostalAddressRequestBodyRequestBody struct {
	Country       *string `form:"country,omitempty" json:"country,omitempty" xml:"country,omitempty"`
	Locality      *string `form:"locality,omitempty" json:"locality,omitempty" xml:"locality,omitempty"`
	Region        *string `form:"region,omitempty" json:"region,omitempty" xml:"region,omitempty"`
	PostalCode    *string `form:"postal_code,omitempty" json:"postal_code,omitempty" xml:"postal_code,omitempty"`
	StreetAddress *string `form:"street_address,omitempty" json:"street_address,omitempty" xml:"street_address,omitempty"`
}

// NewBatchGetWaitEstimatesResponseBody builds the HTTP response body from the
// result of the "batch_get_wait_estimates" endpoint of the "waitlist" service.
func NewBatchGetWaitEstimatesResponseBody(res *waitlist.BatchGetWaitEstimatesResponse) *BatchGetWaitEstimatesResponseBody {
	body := &BatchGetWaitEstimatesResponseBody{
		WaitlistStatus: res.WaitlistStatus,
	}
	if res.WaitEstimate != nil {
		body.WaitEstimate = make([]*WaitEstimateResponseBody, len(res.WaitEstimate))
		for i, val := range res.WaitEstimate {
			body.WaitEstimate[i] = marshalWaitlistWaitEstimateToWaitEstimateResponseBody(val)
		}
	}
	return body
}

// NewCreateWaitlistEntryResponseBody builds the HTTP response body from the
// result of the "create_waitlist_entry" endpoint of the "waitlist" service.
func NewCreateWaitlistEntryResponseBody(res *waitlist.CreateWaitlistEntryResponse) *CreateWaitlistEntryResponseBody {
	body := &CreateWaitlistEntryResponseBody{
		WaitlistEntryID: res.WaitlistEntryID,
	}
	if res.WaitlistBusinessLogicFailure != nil {
		body.WaitlistBusinessLogicFailure = marshalWaitlistWaitlistBusinessLogicFailureToWaitlistBusinessLogicFailureResponseBody(res.WaitlistBusinessLogicFailure)
	}
	return body
}

// NewGetWaitlistEntryResponseBody builds the HTTP response body from the
// result of the "get_waitlist_entry" endpoint of the "waitlist" service.
func NewGetWaitlistEntryResponseBody(res *waitlist.GetWaitlistEntryResponse) *GetWaitlistEntryResponseBody {
	body := &GetWaitlistEntryResponseBody{}
	if res.WaitlistEntry != nil {
		body.WaitlistEntry = marshalWaitlistWaitlistEntryToWaitlistEntryResponseBody(res.WaitlistEntry)
	}
	return body
}

// NewBatchGetWaitEstimatesBadRequestResponseBody builds the HTTP response body
// from the result of the "batch_get_wait_estimates" endpoint of the "waitlist"
// service.
func NewBatchGetWaitEstimatesBadRequestResponseBody(res *goa.ServiceError) *BatchGetWaitEstimatesBadRequestResponseBody {
	body := &BatchGetWaitEstimatesBadRequestResponseBody{
		Name:      res.Name,
		ID:        res.ID,
		Message:   res.Message,
		Temporary: res.Temporary,
		Timeout:   res.Timeout,
		Fault:     res.Fault,
	}
	return body
}

// NewBatchGetWaitEstimatesUnauthorizedResponseBody builds the HTTP response
// body from the result of the "batch_get_wait_estimates" endpoint of the
// "waitlist" service.
func NewBatchGetWaitEstimatesUnauthorizedResponseBody(res *goa.ServiceError) *BatchGetWaitEstimatesUnauthorizedResponseBody {
	body := &BatchGetWaitEstimatesUnauthorizedResponseBody{
		Name:      res.Name,
		ID:        res.ID,
		Message:   res.Message,
		Temporary: res.Temporary,
		Timeout:   res.Timeout,
		Fault:     res.Fault,
	}
	return body
}

// NewBatchGetWaitEstimatesForbiddenResponseBody builds the HTTP response body
// from the result of the "batch_get_wait_estimates" endpoint of the "waitlist"
// service.
func NewBatchGetWaitEstimatesForbiddenResponseBody(res *goa.ServiceError) *BatchGetWaitEstimatesForbiddenResponseBody {
	body := &BatchGetWaitEstimatesForbiddenResponseBody{
		Name:      res.Name,
		ID:        res.ID,
		Message:   res.Message,
		Temporary: res.Temporary,
		Timeout:   res.Timeout,
		Fault:     res.Fault,
	}
	return body
}

// NewBatchGetWaitEstimatesNotFoundResponseBody builds the HTTP response body
// from the result of the "batch_get_wait_estimates" endpoint of the "waitlist"
// service.
func NewBatchGetWaitEstimatesNotFoundResponseBody(res *goa.ServiceError) *BatchGetWaitEstimatesNotFoundResponseBody {
	body := &BatchGetWaitEstimatesNotFoundResponseBody{
		Name:      res.Name,
		ID:        res.ID,
		Message:   res.Message,
		Temporary: res.Temporary,
		Timeout:   res.Timeout,
		Fault:     res.Fault,
	}
	return body
}

// NewBatchGetWaitEstimatesConflictResponseBody builds the HTTP response body
// from the result of the "batch_get_wait_estimates" endpoint of the "waitlist"
// service.
func NewBatchGetWaitEstimatesConflictResponseBody(res *goa.ServiceError) *BatchGetWaitEstimatesConflictResponseBody {
	body := &BatchGetWaitEstimatesConflictResponseBody{
		Name:      res.Name,
		ID:        res.ID,
		Message:   res.Message,
		Temporary: res.Temporary,
		Timeout:   res.Timeout,
		Fault:     res.Fault,
	}
	return body
}

// NewBatchGetWaitEstimatesTooManyRequestsResponseBody builds the HTTP response
// body from the result of the "batch_get_wait_estimates" endpoint of the
// "waitlist" service.
func NewBatchGetWaitEstimatesTooManyRequestsResponseBody(res *goa.ServiceError) *BatchGetWaitEstimatesTooManyRequestsResponseBody {
	body := &BatchGetWaitEstimatesTooManyRequestsResponseBody{
		Name:      res.Name,
		ID:        res.ID,
		Message:   res.Message,
		Temporary: res.Temporary,
		Timeout:   res.Timeout,
		Fault:     res.Fault,
	}
	return body
}

// NewBatchGetWaitEstimatesClientClosedRequestResponseBody builds the HTTP
// response body from the result of the "batch_get_wait_estimates" endpoint of
// the "waitlist" service.
func NewBatchGetWaitEstimatesClientClosedRequestResponseBody(res *goa.ServiceError) *BatchGetWaitEstimatesClientClosedRequestResponseBody {
	body := &BatchGetWaitEstimatesClientClosedRequestResponseBody{
		Name:      res.Name,
		ID:        res.ID,
		Message:   res.Message,
		Temporary: res.Temporary,
		Timeout:   res.Timeout,
		Fault:     res.Fault,
	}
	return body
}

// NewBatchGetWaitEstimatesInternalServerErrorResponseBody builds the HTTP
// response body from the result of the "batch_get_wait_estimates" endpoint of
// the "waitlist" service.
func NewBatchGetWaitEstimatesInternalServerErrorResponseBody(res *goa.ServiceError) *BatchGetWaitEstimatesInternalServerErrorResponseBody {
	body := &BatchGetWaitEstimatesInternalServerErrorResponseBody{
		Name:      res.Name,
		ID:        res.ID,
		Message:   res.Message,
		Temporary: res.Temporary,
		Timeout:   res.Timeout,
		Fault:     res.Fault,
	}
	return body
}

// NewBatchGetWaitEstimatesNotImplementedResponseBody builds the HTTP response
// body from the result of the "batch_get_wait_estimates" endpoint of the
// "waitlist" service.
func NewBatchGetWaitEstimatesNotImplementedResponseBody(res *goa.ServiceError) *BatchGetWaitEstimatesNotImplementedResponseBody {
	body := &BatchGetWaitEstimatesNotImplementedResponseBody{
		Name:      res.Name,
		ID:        res.ID,
		Message:   res.Message,
		Temporary: res.Temporary,
		Timeout:   res.Timeout,
		Fault:     res.Fault,
	}
	return body
}

// NewBatchGetWaitEstimatesServiceUnavailableResponseBody builds the HTTP
// response body from the result of the "batch_get_wait_estimates" endpoint of
// the "waitlist" service.
func NewBatchGetWaitEstimatesServiceUnavailableResponseBody(res *goa.ServiceError) *BatchGetWaitEstimatesServiceUnavailableResponseBody {
	body := &BatchGetWaitEstimatesServiceUnavailableResponseBody{
		Name:      res.Name,
		ID:        res.ID,
		Message:   res.Message,
		Temporary: res.Temporary,
		Timeout:   res.Timeout,
		Fault:     res.Fault,
	}
	return body
}

// NewBatchGetWaitEstimatesGatewayTimeoutResponseBody builds the HTTP response
// body from the result of the "batch_get_wait_estimates" endpoint of the
// "waitlist" service.
func NewBatchGetWaitEstimatesGatewayTimeoutResponseBody(res *goa.ServiceError) *BatchGetWaitEstimatesGatewayTimeoutResponseBody {
	body := &BatchGetWaitEstimatesGatewayTimeoutResponseBody{
		Name:      res.Name,
		ID:        res.ID,
		Message:   res.Message,
		Temporary: res.Temporary,
		Timeout:   res.Timeout,
		Fault:     res.Fault,
	}
	return body
}

// NewCreateWaitlistEntryBadRequestResponseBody builds the HTTP response body
// from the result of the "create_waitlist_entry" endpoint of the "waitlist"
// service.
func NewCreateWaitlistEntryBadRequestResponseBody(res *goa.ServiceError) *CreateWaitlistEntryBadRequestResponseBody {
	body := &CreateWaitlistEntryBadRequestResponseBody{
		Name:      res.Name,
		ID:        res.ID,
		Message:   res.Message,
		Temporary: res.Temporary,
		Timeout:   res.Timeout,
		Fault:     res.Fault,
	}
	return body
}

// NewCreateWaitlistEntryUnauthorizedResponseBody builds the HTTP response body
// from the result of the "create_waitlist_entry" endpoint of the "waitlist"
// service.
func NewCreateWaitlistEntryUnauthorizedResponseBody(res *goa.ServiceError) *CreateWaitlistEntryUnauthorizedResponseBody {
	body := &CreateWaitlistEntryUnauthorizedResponseBody{
		Name:      res.Name,
		ID:        res.ID,
		Message:   res.Message,
		Temporary: res.Temporary,
		Timeout:   res.Timeout,
		Fault:     res.Fault,
	}
	return body
}

// NewCreateWaitlistEntryForbiddenResponseBody builds the HTTP response body
// from the result of the "create_waitlist_entry" endpoint of the "waitlist"
// service.
func NewCreateWaitlistEntryForbiddenResponseBody(res *goa.ServiceError) *CreateWaitlistEntryForbiddenResponseBody {
	body := &CreateWaitlistEntryForbiddenResponseBody{
		Name:      res.Name,
		ID:        res.ID,
		Message:   res.Message,
		Temporary: res.Temporary,
		Timeout:   res.Timeout,
		Fault:     res.Fault,
	}
	return body
}

// NewCreateWaitlistEntryNotFoundResponseBody builds the HTTP response body
// from the result of the "create_waitlist_entry" endpoint of the "waitlist"
// service.
func NewCreateWaitlistEntryNotFoundResponseBody(res *goa.ServiceError) *CreateWaitlistEntryNotFoundResponseBody {
	body := &CreateWaitlistEntryNotFoundResponseBody{
		Name:      res.Name,
		ID:        res.ID,
		Message:   res.Message,
		Temporary: res.Temporary,
		Timeout:   res.Timeout,
		Fault:     res.Fault,
	}
	return body
}

// NewCreateWaitlistEntryConflictResponseBody builds the HTTP response body
// from the result of the "create_waitlist_entry" endpoint of the "waitlist"
// service.
func NewCreateWaitlistEntryConflictResponseBody(res *goa.ServiceError) *CreateWaitlistEntryConflictResponseBody {
	body := &CreateWaitlistEntryConflictResponseBody{
		Name:      res.Name,
		ID:        res.ID,
		Message:   res.Message,
		Temporary: res.Temporary,
		Timeout:   res.Timeout,
		Fault:     res.Fault,
	}
	return body
}

// NewCreateWaitlistEntryTooManyRequestsResponseBody builds the HTTP response
// body from the result of the "create_waitlist_entry" endpoint of the
// "waitlist" service.
func NewCreateWaitlistEntryTooManyRequestsResponseBody(res *goa.ServiceError) *CreateWaitlistEntryTooManyRequestsResponseBody {
	body := &CreateWaitlistEntryTooManyRequestsResponseBody{
		Name:      res.Name,
		ID:        res.ID,
		Message:   res.Message,
		Temporary: res.Temporary,
		Timeout:   res.Timeout,
		Fault:     res.Fault,
	}
	return body
}

// NewCreateWaitlistEntryClientClosedRequestResponseBody builds the HTTP
// response body from the result of the "create_waitlist_entry" endpoint of the
// "waitlist" service.
func NewCreateWaitlistEntryClientClosedRequestResponseBody(res *goa.ServiceError) *CreateWaitlistEntryClientClosedRequestResponseBody {
	body := &CreateWaitlistEntryClientClosedRequestResponseBody{
		Name:      res.Name,
		ID:        res.ID,
		Message:   res.Message,
		Temporary: res.Temporary,
		Timeout:   res.Timeout,
		Fault:     res.Fault,
	}
	return body
}

// NewCreateWaitlistEntryInternalServerErrorResponseBody builds the HTTP
// response body from the result of the "create_waitlist_entry" endpoint of the
// "waitlist" service.
func NewCreateWaitlistEntryInternalServerErrorResponseBody(res *goa.ServiceError) *CreateWaitlistEntryInternalServerErrorResponseBody {
	body := &CreateWaitlistEntryInternalServerErrorResponseBody{
		Name:      res.Name,
		ID:        res.ID,
		Message:   res.Message,
		Temporary: res.Temporary,
		Timeout:   res.Timeout,
		Fault:     res.Fault,
	}
	return body
}

// NewCreateWaitlistEntryNotImplementedResponseBody builds the HTTP response
// body from the result of the "create_waitlist_entry" endpoint of the
// "waitlist" service.
func NewCreateWaitlistEntryNotImplementedResponseBody(res *goa.ServiceError) *CreateWaitlistEntryNotImplementedResponseBody {
	body := &CreateWaitlistEntryNotImplementedResponseBody{
		Name:      res.Name,
		ID:        res.ID,
		Message:   res.Message,
		Temporary: res.Temporary,
		Timeout:   res.Timeout,
		Fault:     res.Fault,
	}
	return body
}

// NewCreateWaitlistEntryServiceUnavailableResponseBody builds the HTTP
// response body from the result of the "create_waitlist_entry" endpoint of the
// "waitlist" service.
func NewCreateWaitlistEntryServiceUnavailableResponseBody(res *goa.ServiceError) *CreateWaitlistEntryServiceUnavailableResponseBody {
	body := &CreateWaitlistEntryServiceUnavailableResponseBody{
		Name:      res.Name,
		ID:        res.ID,
		Message:   res.Message,
		Temporary: res.Temporary,
		Timeout:   res.Timeout,
		Fault:     res.Fault,
	}
	return body
}

// NewCreateWaitlistEntryGatewayTimeoutResponseBody builds the HTTP response
// body from the result of the "create_waitlist_entry" endpoint of the
// "waitlist" service.
func NewCreateWaitlistEntryGatewayTimeoutResponseBody(res *goa.ServiceError) *CreateWaitlistEntryGatewayTimeoutResponseBody {
	body := &CreateWaitlistEntryGatewayTimeoutResponseBody{
		Name:      res.Name,
		ID:        res.ID,
		Message:   res.Message,
		Temporary: res.Temporary,
		Timeout:   res.Timeout,
		Fault:     res.Fault,
	}
	return body
}

// NewGetWaitlistEntryBadRequestResponseBody builds the HTTP response body from
// the result of the "get_waitlist_entry" endpoint of the "waitlist" service.
func NewGetWaitlistEntryBadRequestResponseBody(res *goa.ServiceError) *GetWaitlistEntryBadRequestResponseBody {
	body := &GetWaitlistEntryBadRequestResponseBody{
		Name:      res.Name,
		ID:        res.ID,
		Message:   res.Message,
		Temporary: res.Temporary,
		Timeout:   res.Timeout,
		Fault:     res.Fault,
	}
	return body
}

// NewGetWaitlistEntryUnauthorizedResponseBody builds the HTTP response body
// from the result of the "get_waitlist_entry" endpoint of the "waitlist"
// service.
func NewGetWaitlistEntryUnauthorizedResponseBody(res *goa.ServiceError) *GetWaitlistEntryUnauthorizedResponseBody {
	body := &GetWaitlistEntryUnauthorizedResponseBody{
		Name:      res.Name,
		ID:        res.ID,
		Message:   res.Message,
		Temporary: res.Temporary,
		Timeout:   res.Timeout,
		Fault:     res.Fault,
	}
	return body
}

// NewGetWaitlistEntryForbiddenResponseBody builds the HTTP response body from
// the result of the "get_waitlist_entry" endpoint of the "waitlist" service.
func NewGetWaitlistEntryForbiddenResponseBody(res *goa.ServiceError) *GetWaitlistEntryForbiddenResponseBody {
	body := &GetWaitlistEntryForbiddenResponseBody{
		Name:      res.Name,
		ID:        res.ID,
		Message:   res.Message,
		Temporary: res.Temporary,
		Timeout:   res.Timeout,
		Fault:     res.Fault,
	}
	return body
}

// NewGetWaitlistEntryNotFoundResponseBody builds the HTTP response body from
// the result of the "get_waitlist_entry" endpoint of the "waitlist" service.
func NewGetWaitlistEntryNotFoundResponseBody(res *goa.ServiceError) *GetWaitlistEntryNotFoundResponseBody {
	body := &GetWaitlistEntryNotFoundResponseBody{
		Name:      res.Name,
		ID:        res.ID,
		Message:   res.Message,
		Temporary: res.Temporary,
		Timeout:   res.Timeout,
		Fault:     res.Fault,
	}
	return body
}

// NewGetWaitlistEntryConflictResponseBody builds the HTTP response body from
// the result of the "get_waitlist_entry" endpoint of the "waitlist" service.
func NewGetWaitlistEntryConflictResponseBody(res *goa.ServiceError) *GetWaitlistEntryConflictResponseBody {
	body := &GetWaitlistEntryConflictResponseBody{
		Name:      res.Name,
		ID:        res.ID,
		Message:   res.Message,
		Temporary: res.Temporary,
		Timeout:   res.Timeout,
		Fault:     res.Fault,
	}
	return body
}

// NewGetWaitlistEntryTooManyRequestsResponseBody builds the HTTP response body
// from the result of the "get_waitlist_entry" endpoint of the "waitlist"
// service.
func NewGetWaitlistEntryTooManyRequestsResponseBody(res *goa.ServiceError) *GetWaitlistEntryTooManyRequestsResponseBody {
	body := &GetWaitlistEntryTooManyRequestsResponseBody{
		Name:      res.Name,
		ID:        res.ID,
		Message:   res.Message,
		Temporary: res.Temporary,
		Timeout:   res.Timeout,
		Fault:     res.Fault,
	}
	return body
}

// NewGetWaitlistEntryClientClosedRequestResponseBody builds the HTTP response
// body from the result of the "get_waitlist_entry" endpoint of the "waitlist"
// service.
func NewGetWaitlistEntryClientClosedRequestResponseBody(res *goa.ServiceError) *GetWaitlistEntryClientClosedRequestResponseBody {
	body := &GetWaitlistEntryClientClosedRequestResponseBody{
		Name:      res.Name,
		ID:        res.ID,
		Message:   res.Message,
		Temporary: res.Temporary,
		Timeout:   res.Timeout,
		Fault:     res.Fault,
	}
	return body
}

// NewGetWaitlistEntryInternalServerErrorResponseBody builds the HTTP response
// body from the result of the "get_waitlist_entry" endpoint of the "waitlist"
// service.
func NewGetWaitlistEntryInternalServerErrorResponseBody(res *goa.ServiceError) *GetWaitlistEntryInternalServerErrorResponseBody {
	body := &GetWaitlistEntryInternalServerErrorResponseBody{
		Name:      res.Name,
		ID:        res.ID,
		Message:   res.Message,
		Temporary: res.Temporary,
		Timeout:   res.Timeout,
		Fault:     res.Fault,
	}
	return body
}

// NewGetWaitlistEntryNotImplementedResponseBody builds the HTTP response body
// from the result of the "get_waitlist_entry" endpoint of the "waitlist"
// service.
func NewGetWaitlistEntryNotImplementedResponseBody(res *goa.ServiceError) *GetWaitlistEntryNotImplementedResponseBody {
	body := &GetWaitlistEntryNotImplementedResponseBody{
		Name:      res.Name,
		ID:        res.ID,
		Message:   res.Message,
		Temporary: res.Temporary,
		Timeout:   res.Timeout,
		Fault:     res.Fault,
	}
	return body
}

// NewGetWaitlistEntryServiceUnavailableResponseBody builds the HTTP response
// body from the result of the "get_waitlist_entry" endpoint of the "waitlist"
// service.
func NewGetWaitlistEntryServiceUnavailableResponseBody(res *goa.ServiceError) *GetWaitlistEntryServiceUnavailableResponseBody {
	body := &GetWaitlistEntryServiceUnavailableResponseBody{
		Name:      res.Name,
		ID:        res.ID,
		Message:   res.Message,
		Temporary: res.Temporary,
		Timeout:   res.Timeout,
		Fault:     res.Fault,
	}
	return body
}

// NewGetWaitlistEntryGatewayTimeoutResponseBody builds the HTTP response body
// from the result of the "get_waitlist_entry" endpoint of the "waitlist"
// service.
func NewGetWaitlistEntryGatewayTimeoutResponseBody(res *goa.ServiceError) *GetWaitlistEntryGatewayTimeoutResponseBody {
	body := &GetWaitlistEntryGatewayTimeoutResponseBody{
		Name:      res.Name,
		ID:        res.ID,
		Message:   res.Message,
		Temporary: res.Temporary,
		Timeout:   res.Timeout,
		Fault:     res.Fault,
	}
	return body
}

// NewDeleteWaitlistEntryBadRequestResponseBody builds the HTTP response body
// from the result of the "delete_waitlist_entry" endpoint of the "waitlist"
// service.
func NewDeleteWaitlistEntryBadRequestResponseBody(res *goa.ServiceError) *DeleteWaitlistEntryBadRequestResponseBody {
	body := &DeleteWaitlistEntryBadRequestResponseBody{
		Name:      res.Name,
		ID:        res.ID,
		Message:   res.Message,
		Temporary: res.Temporary,
		Timeout:   res.Timeout,
		Fault:     res.Fault,
	}
	return body
}

// NewDeleteWaitlistEntryUnauthorizedResponseBody builds the HTTP response body
// from the result of the "delete_waitlist_entry" endpoint of the "waitlist"
// service.
func NewDeleteWaitlistEntryUnauthorizedResponseBody(res *goa.ServiceError) *DeleteWaitlistEntryUnauthorizedResponseBody {
	body := &DeleteWaitlistEntryUnauthorizedResponseBody{
		Name:      res.Name,
		ID:        res.ID,
		Message:   res.Message,
		Temporary: res.Temporary,
		Timeout:   res.Timeout,
		Fault:     res.Fault,
	}
	return body
}

// NewDeleteWaitlistEntryForbiddenResponseBody builds the HTTP response body
// from the result of the "delete_waitlist_entry" endpoint of the "waitlist"
// service.
func NewDeleteWaitlistEntryForbiddenResponseBody(res *goa.ServiceError) *DeleteWaitlistEntryForbiddenResponseBody {
	body := &DeleteWaitlistEntryForbiddenResponseBody{
		Name:      res.Name,
		ID:        res.ID,
		Message:   res.Message,
		Temporary: res.Temporary,
		Timeout:   res.Timeout,
		Fault:     res.Fault,
	}
	return body
}

// NewDeleteWaitlistEntryNotFoundResponseBody builds the HTTP response body
// from the result of the "delete_waitlist_entry" endpoint of the "waitlist"
// service.
func NewDeleteWaitlistEntryNotFoundResponseBody(res *goa.ServiceError) *DeleteWaitlistEntryNotFoundResponseBody {
	body := &DeleteWaitlistEntryNotFoundResponseBody{
		Name:      res.Name,
		ID:        res.ID,
		Message:   res.Message,
		Temporary: res.Temporary,
		Timeout:   res.Timeout,
		Fault:     res.Fault,
	}
	return body
}

// NewDeleteWaitlistEntryConflictResponseBody builds the HTTP response body
// from the result of the "delete_waitlist_entry" endpoint of the "waitlist"
// service.
func NewDeleteWaitlistEntryConflictResponseBody(res *goa.ServiceError) *DeleteWaitlistEntryConflictResponseBody {
	body := &DeleteWaitlistEntryConflictResponseBody{
		Name:      res.Name,
		ID:        res.ID,
		Message:   res.Message,
		Temporary: res.Temporary,
		Timeout:   res.Timeout,
		Fault:     res.Fault,
	}
	return body
}

// NewDeleteWaitlistEntryTooManyRequestsResponseBody builds the HTTP response
// body from the result of the "delete_waitlist_entry" endpoint of the
// "waitlist" service.
func NewDeleteWaitlistEntryTooManyRequestsResponseBody(res *goa.ServiceError) *DeleteWaitlistEntryTooManyRequestsResponseBody {
	body := &DeleteWaitlistEntryTooManyRequestsResponseBody{
		Name:      res.Name,
		ID:        res.ID,
		Message:   res.Message,
		Temporary: res.Temporary,
		Timeout:   res.Timeout,
		Fault:     res.Fault,
	}
	return body
}

// NewDeleteWaitlistEntryClientClosedRequestResponseBody builds the HTTP
// response body from the result of the "delete_waitlist_entry" endpoint of the
// "waitlist" service.
func NewDeleteWaitlistEntryClientClosedRequestResponseBody(res *goa.ServiceError) *DeleteWaitlistEntryClientClosedRequestResponseBody {
	body := &DeleteWaitlistEntryClientClosedRequestResponseBody{
		Name:      res.Name,
		ID:        res.ID,
		Message:   res.Message,
		Temporary: res.Temporary,
		Timeout:   res.Timeout,
		Fault:     res.Fault,
	}
	return body
}

// NewDeleteWaitlistEntryInternalServerErrorResponseBody builds the HTTP
// response body from the result of the "delete_waitlist_entry" endpoint of the
// "waitlist" service.
func NewDeleteWaitlistEntryInternalServerErrorResponseBody(res *goa.ServiceError) *DeleteWaitlistEntryInternalServerErrorResponseBody {
	body := &DeleteWaitlistEntryInternalServerErrorResponseBody{
		Name:      res.Name,
		ID:        res.ID,
		Message:   res.Message,
		Temporary: res.Temporary,
		Timeout:   res.Timeout,
		Fault:     res.Fault,
	}
	return body
}

// NewDeleteWaitlistEntryNotImplementedResponseBody builds the HTTP response
// body from the result of the "delete_waitlist_entry" endpoint of the
// "waitlist" service.
func NewDeleteWaitlistEntryNotImplementedResponseBody(res *goa.ServiceError) *DeleteWaitlistEntryNotImplementedResponseBody {
	body := &DeleteWaitlistEntryNotImplementedResponseBody{
		Name:      res.Name,
		ID:        res.ID,
		Message:   res.Message,
		Temporary: res.Temporary,
		Timeout:   res.Timeout,
		Fault:     res.Fault,
	}
	return body
}

// NewDeleteWaitlistEntryServiceUnavailableResponseBody builds the HTTP
// response body from the result of the "delete_waitlist_entry" endpoint of the
// "waitlist" service.
func NewDeleteWaitlistEntryServiceUnavailableResponseBody(res *goa.ServiceError) *DeleteWaitlistEntryServiceUnavailableResponseBody {
	body := &DeleteWaitlistEntryServiceUnavailableResponseBody{
		Name:      res.Name,
		ID:        res.ID,
		Message:   res.Message,
		Temporary: res.Temporary,
		Timeout:   res.Timeout,
		Fault:     res.Fault,
	}
	return body
}

// NewDeleteWaitlistEntryGatewayTimeoutResponseBody builds the HTTP response
// body from the result of the "delete_waitlist_entry" endpoint of the
// "waitlist" service.
func NewDeleteWaitlistEntryGatewayTimeoutResponseBody(res *goa.ServiceError) *DeleteWaitlistEntryGatewayTimeoutResponseBody {
	body := &DeleteWaitlistEntryGatewayTimeoutResponseBody{
		Name:      res.Name,
		ID:        res.ID,
		Message:   res.Message,
		Temporary: res.Temporary,
		Timeout:   res.Timeout,
		Fault:     res.Fault,
	}
	return body
}

// NewBatchGetWaitEstimatesPayload builds a waitlist service
// batch_get_wait_estimates endpoint payload.
func NewBatchGetWaitEstimatesPayload(body *BatchGetWaitEstimatesRequestBody) *waitlist.BatchGetWaitEstimatesPayload {
	v := &waitlist.BatchGetWaitEstimatesRequest{
		MerchantID: *body.MerchantID,
		ServiceID:  *body.ServiceID,
	}
	v.PartySize = make([]int32, len(body.PartySize))
	for i, val := range body.PartySize {
		v.PartySize[i] = val
	}
	res := &waitlist.BatchGetWaitEstimatesPayload{
		Body: v,
	}

	return res
}

// NewCreateWaitlistEntryPayload builds a waitlist service
// create_waitlist_entry endpoint payload.
func NewCreateWaitlistEntryPayload(body *CreateWaitlistEntryRequestBody) *waitlist.CreateWaitlistEntryPayload {
	v := &waitlist.CreateWaitlistEntryRequest{
		MerchantID:        *body.MerchantID,
		ServiceID:         *body.ServiceID,
		PartySize:         *body.PartySize,
		AdditionalRequest: body.AdditionalRequest,
		IdempotencyToken:  *body.IdempotencyToken,
	}
	v.UserInformation = unmarshalUserInformationRequestBodyRequestBodyToWaitlistUserInformation(body.UserInformation)
	res := &waitlist.CreateWaitlistEntryPayload{
		Body: v,
	}

	return res
}

// NewGetWaitlistEntryPayload builds a waitlist service get_waitlist_entry
// endpoint payload.
func NewGetWaitlistEntryPayload(body *GetWaitlistEntryRequestBody) *waitlist.GetWaitlistEntryPayload {
	v := &waitlist.GetWaitlistEntryRequest{
		WaitlistEntryID: *body.WaitlistEntryID,
	}
	res := &waitlist.GetWaitlistEntryPayload{
		Body: v,
	}

	return res
}

// NewDeleteWaitlistEntryPayload builds a waitlist service
// delete_waitlist_entry endpoint payload.
func NewDeleteWaitlistEntryPayload(body *DeleteWaitlistEntryRequestBody) *waitlist.DeleteWaitlistEntryPayload {
	v := &waitlist.DeleteWaitlistEntryRequest{
		WaitlistEntryID: *body.WaitlistEntryID,
	}
	res := &waitlist.DeleteWaitlistEntryPayload{
		Body: v,
	}

	return res
}

// ValidateBatchGetWaitEstimatesRequestBody runs the validations defined on
// batch_get_wait_estimates_request_body
func ValidateBatchGetWaitEstimatesRequestBody(body *BatchGetWaitEstimatesRequestBody) (err error) {
	if body.MerchantID == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("merchant_id", "body"))
	}
	if body.ServiceID == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("service_id", "body"))
	}
	if body.PartySize == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("party_size", "body"))
	}
	return
}

// ValidateCreateWaitlistEntryRequestBody runs the validations defined on
// create_waitlist_entry_request_body
func ValidateCreateWaitlistEntryRequestBody(body *CreateWaitlistEntryRequestBody) (err error) {
	if body.MerchantID == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("merchant_id", "body"))
	}
	if body.ServiceID == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("service_id", "body"))
	}
	if body.PartySize == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("party_size", "body"))
	}
	if body.UserInformation == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("user_information", "body"))
	}
	if body.IdempotencyToken == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("idempotency_token", "body"))
	}
	if body.UserInformation != nil {
		if err2 := ValidateUserInformationRequestBodyRequestBody(body.UserInformation); err2 != nil {
			err = goa.MergeErrors(err, err2)
		}
	}
	return
}

// ValidateGetWaitlistEntryRequestBody runs the validations defined on
// get_waitlist_entry_request_body
func ValidateGetWaitlistEntryRequestBody(body *GetWaitlistEntryRequestBody) (err error) {
	if body.WaitlistEntryID == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("waitlist_entry_id", "body"))
	}
	return
}

// ValidateDeleteWaitlistEntryRequestBody runs the validations defined on
// delete_waitlist_entry_request_body
func ValidateDeleteWaitlistEntryRequestBody(body *DeleteWaitlistEntryRequestBody) (err error) {
	if body.WaitlistEntryID == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("waitlist_entry_id", "body"))
	}
	return
}

// ValidateUserInformationRequestBodyRequestBody runs the validations defined
// on UserInformationRequestBodyRequestBody
func ValidateUserInformationRequestBodyRequestBody(body *UserInformationRequestBodyRequestBody) (err error) {
	if body.UserID == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("user_id", "body"))
	}
	if body.GivenName == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("given_name", "body"))
	}
	if body.FamilyName == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("family_name", "body"))
	}
	if body.Telephone == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("telephone", "body"))
	}
	if body.Email == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("email", "body"))
	}
	if body.Address != nil {
		if err2 := ValidatePostalAddressRequestBodyRequestBody(body.Address); err2 != nil {
			err = goa.MergeErrors(err, err2)
		}
	}
	return
}

// ValidatePostalAddressRequestBodyRequestBody runs the validations defined on
// PostalAddressRequestBodyRequestBody
func ValidatePostalAddressRequestBodyRequestBody(body *PostalAddressRequestBodyRequestBody) (err error) {
	if body.Country == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("country", "body"))
	}
	if body.Locality == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("locality", "body"))
	}
	if body.PostalCode == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("postal_code", "body"))
	}
	if body.StreetAddress == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("street_address", "body"))
	}
	return
}
