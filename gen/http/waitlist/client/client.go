// Code generated by goa v3.2.4, DO NOT EDIT.
//
// waitlist client HTTP transport
//
// Command:
// $ goa gen github.com/tchssk/reserve-with-google-goa/design

package client

import (
	"context"
	"net/http"

	goahttp "goa.design/goa/v3/http"
	goa "goa.design/goa/v3/pkg"
)

// Client lists the waitlist service endpoint HTTP clients.
type Client struct {
	// BatchGetWaitEstimates Doer is the HTTP client used to make requests to the
	// batch_get_wait_estimates endpoint.
	BatchGetWaitEstimatesDoer goahttp.Doer

	// CreateWaitlistEntry Doer is the HTTP client used to make requests to the
	// create_waitlist_entry endpoint.
	CreateWaitlistEntryDoer goahttp.Doer

	// GetWaitlistEntry Doer is the HTTP client used to make requests to the
	// get_waitlist_entry endpoint.
	GetWaitlistEntryDoer goahttp.Doer

	// DeleteWaitlistEntry Doer is the HTTP client used to make requests to the
	// delete_waitlist_entry endpoint.
	DeleteWaitlistEntryDoer goahttp.Doer

	// RestoreResponseBody controls whether the response bodies are reset after
	// decoding so they can be read again.
	RestoreResponseBody bool

	scheme  string
	host    string
	encoder func(*http.Request) goahttp.Encoder
	decoder func(*http.Response) goahttp.Decoder
}

// NewClient instantiates HTTP clients for all the waitlist service servers.
func NewClient(
	scheme string,
	host string,
	doer goahttp.Doer,
	enc func(*http.Request) goahttp.Encoder,
	dec func(*http.Response) goahttp.Decoder,
	restoreBody bool,
) *Client {
	return &Client{
		BatchGetWaitEstimatesDoer: doer,
		CreateWaitlistEntryDoer:   doer,
		GetWaitlistEntryDoer:      doer,
		DeleteWaitlistEntryDoer:   doer,
		RestoreResponseBody:       restoreBody,
		scheme:                    scheme,
		host:                      host,
		decoder:                   dec,
		encoder:                   enc,
	}
}

// BatchGetWaitEstimates returns an endpoint that makes HTTP requests to the
// waitlist service batch_get_wait_estimates server.
func (c *Client) BatchGetWaitEstimates() goa.Endpoint {
	var (
		encodeRequest  = EncodeBatchGetWaitEstimatesRequest(c.encoder)
		decodeResponse = DecodeBatchGetWaitEstimatesResponse(c.decoder, c.RestoreResponseBody)
	)
	return func(ctx context.Context, v interface{}) (interface{}, error) {
		req, err := c.BuildBatchGetWaitEstimatesRequest(ctx, v)
		if err != nil {
			return nil, err
		}
		err = encodeRequest(req, v)
		if err != nil {
			return nil, err
		}
		resp, err := c.BatchGetWaitEstimatesDoer.Do(req)
		if err != nil {
			return nil, goahttp.ErrRequestError("waitlist", "batch_get_wait_estimates", err)
		}
		return decodeResponse(resp)
	}
}

// CreateWaitlistEntry returns an endpoint that makes HTTP requests to the
// waitlist service create_waitlist_entry server.
func (c *Client) CreateWaitlistEntry() goa.Endpoint {
	var (
		encodeRequest  = EncodeCreateWaitlistEntryRequest(c.encoder)
		decodeResponse = DecodeCreateWaitlistEntryResponse(c.decoder, c.RestoreResponseBody)
	)
	return func(ctx context.Context, v interface{}) (interface{}, error) {
		req, err := c.BuildCreateWaitlistEntryRequest(ctx, v)
		if err != nil {
			return nil, err
		}
		err = encodeRequest(req, v)
		if err != nil {
			return nil, err
		}
		resp, err := c.CreateWaitlistEntryDoer.Do(req)
		if err != nil {
			return nil, goahttp.ErrRequestError("waitlist", "create_waitlist_entry", err)
		}
		return decodeResponse(resp)
	}
}

// GetWaitlistEntry returns an endpoint that makes HTTP requests to the
// waitlist service get_waitlist_entry server.
func (c *Client) GetWaitlistEntry() goa.Endpoint {
	var (
		encodeRequest  = EncodeGetWaitlistEntryRequest(c.encoder)
		decodeResponse = DecodeGetWaitlistEntryResponse(c.decoder, c.RestoreResponseBody)
	)
	return func(ctx context.Context, v interface{}) (interface{}, error) {
		req, err := c.BuildGetWaitlistEntryRequest(ctx, v)
		if err != nil {
			return nil, err
		}
		err = encodeRequest(req, v)
		if err != nil {
			return nil, err
		}
		resp, err := c.GetWaitlistEntryDoer.Do(req)
		if err != nil {
			return nil, goahttp.ErrRequestError("waitlist", "get_waitlist_entry", err)
		}
		return decodeResponse(resp)
	}
}

// DeleteWaitlistEntry returns an endpoint that makes HTTP requests to the
// waitlist service delete_waitlist_entry server.
func (c *Client) DeleteWaitlistEntry() goa.Endpoint {
	var (
		encodeRequest  = EncodeDeleteWaitlistEntryRequest(c.encoder)
		decodeResponse = DecodeDeleteWaitlistEntryResponse(c.decoder, c.RestoreResponseBody)
	)
	return func(ctx context.Context, v interface{}) (interface{}, error) {
		req, err := c.BuildDeleteWaitlistEntryRequest(ctx, v)
		if err != nil {
			return nil, err
		}
		err = encodeRequest(req, v)
		if err != nil {
			return nil, err
		}
		resp, err := c.DeleteWaitlistEntryDoer.Do(req)
		if err != nil {
			return nil, goahttp.ErrRequestError("waitlist", "delete_waitlist_entry", err)
		}
		return decodeResponse(resp)
	}
}
