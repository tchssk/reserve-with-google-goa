// Code generated by goa v3.2.4, DO NOT EDIT.
//
// common HTTP server types
//
// Command:
// $ goa gen github.com/tchssk/reserve-with-google-goa/design

package server

import (
	common "github.com/tchssk/reserve-with-google-goa/gen/common"
	goa "goa.design/goa/v3/pkg"
)

// HealthCheckResponseBody is the type of the "common" service "health_check"
// endpoint HTTP response body.
type HealthCheckResponseBody struct {
	Status string `form:"status" json:"status" xml:"status"`
}

// HealthCheckBadRequestResponseBody is the type of the "common" service
// "health_check" endpoint HTTP response body for the "bad_request" error.
type HealthCheckBadRequestResponseBody struct {
	// Name is the name of this class of errors.
	Name string `form:"name" json:"name" xml:"name"`
	// ID is a unique identifier for this particular occurrence of the problem.
	ID string `form:"id" json:"id" xml:"id"`
	// Message is a human-readable explanation specific to this occurrence of the
	// problem.
	Message string `form:"message" json:"message" xml:"message"`
	// Is the error temporary?
	Temporary bool `form:"temporary" json:"temporary" xml:"temporary"`
	// Is the error a timeout?
	Timeout bool `form:"timeout" json:"timeout" xml:"timeout"`
	// Is the error a server-side fault?
	Fault bool `form:"fault" json:"fault" xml:"fault"`
}

// HealthCheckUnauthorizedResponseBody is the type of the "common" service
// "health_check" endpoint HTTP response body for the "unauthorized" error.
type HealthCheckUnauthorizedResponseBody struct {
	// Name is the name of this class of errors.
	Name string `form:"name" json:"name" xml:"name"`
	// ID is a unique identifier for this particular occurrence of the problem.
	ID string `form:"id" json:"id" xml:"id"`
	// Message is a human-readable explanation specific to this occurrence of the
	// problem.
	Message string `form:"message" json:"message" xml:"message"`
	// Is the error temporary?
	Temporary bool `form:"temporary" json:"temporary" xml:"temporary"`
	// Is the error a timeout?
	Timeout bool `form:"timeout" json:"timeout" xml:"timeout"`
	// Is the error a server-side fault?
	Fault bool `form:"fault" json:"fault" xml:"fault"`
}

// HealthCheckForbiddenResponseBody is the type of the "common" service
// "health_check" endpoint HTTP response body for the "forbidden" error.
type HealthCheckForbiddenResponseBody struct {
	// Name is the name of this class of errors.
	Name string `form:"name" json:"name" xml:"name"`
	// ID is a unique identifier for this particular occurrence of the problem.
	ID string `form:"id" json:"id" xml:"id"`
	// Message is a human-readable explanation specific to this occurrence of the
	// problem.
	Message string `form:"message" json:"message" xml:"message"`
	// Is the error temporary?
	Temporary bool `form:"temporary" json:"temporary" xml:"temporary"`
	// Is the error a timeout?
	Timeout bool `form:"timeout" json:"timeout" xml:"timeout"`
	// Is the error a server-side fault?
	Fault bool `form:"fault" json:"fault" xml:"fault"`
}

// HealthCheckNotFoundResponseBody is the type of the "common" service
// "health_check" endpoint HTTP response body for the "not_found" error.
type HealthCheckNotFoundResponseBody struct {
	// Name is the name of this class of errors.
	Name string `form:"name" json:"name" xml:"name"`
	// ID is a unique identifier for this particular occurrence of the problem.
	ID string `form:"id" json:"id" xml:"id"`
	// Message is a human-readable explanation specific to this occurrence of the
	// problem.
	Message string `form:"message" json:"message" xml:"message"`
	// Is the error temporary?
	Temporary bool `form:"temporary" json:"temporary" xml:"temporary"`
	// Is the error a timeout?
	Timeout bool `form:"timeout" json:"timeout" xml:"timeout"`
	// Is the error a server-side fault?
	Fault bool `form:"fault" json:"fault" xml:"fault"`
}

// HealthCheckConflictResponseBody is the type of the "common" service
// "health_check" endpoint HTTP response body for the "conflict" error.
type HealthCheckConflictResponseBody struct {
	// Name is the name of this class of errors.
	Name string `form:"name" json:"name" xml:"name"`
	// ID is a unique identifier for this particular occurrence of the problem.
	ID string `form:"id" json:"id" xml:"id"`
	// Message is a human-readable explanation specific to this occurrence of the
	// problem.
	Message string `form:"message" json:"message" xml:"message"`
	// Is the error temporary?
	Temporary bool `form:"temporary" json:"temporary" xml:"temporary"`
	// Is the error a timeout?
	Timeout bool `form:"timeout" json:"timeout" xml:"timeout"`
	// Is the error a server-side fault?
	Fault bool `form:"fault" json:"fault" xml:"fault"`
}

// HealthCheckTooManyRequestsResponseBody is the type of the "common" service
// "health_check" endpoint HTTP response body for the "too_many_requests" error.
type HealthCheckTooManyRequestsResponseBody struct {
	// Name is the name of this class of errors.
	Name string `form:"name" json:"name" xml:"name"`
	// ID is a unique identifier for this particular occurrence of the problem.
	ID string `form:"id" json:"id" xml:"id"`
	// Message is a human-readable explanation specific to this occurrence of the
	// problem.
	Message string `form:"message" json:"message" xml:"message"`
	// Is the error temporary?
	Temporary bool `form:"temporary" json:"temporary" xml:"temporary"`
	// Is the error a timeout?
	Timeout bool `form:"timeout" json:"timeout" xml:"timeout"`
	// Is the error a server-side fault?
	Fault bool `form:"fault" json:"fault" xml:"fault"`
}

// HealthCheckClientClosedRequestResponseBody is the type of the "common"
// service "health_check" endpoint HTTP response body for the
// "client_closed_request" error.
type HealthCheckClientClosedRequestResponseBody struct {
	// Name is the name of this class of errors.
	Name string `form:"name" json:"name" xml:"name"`
	// ID is a unique identifier for this particular occurrence of the problem.
	ID string `form:"id" json:"id" xml:"id"`
	// Message is a human-readable explanation specific to this occurrence of the
	// problem.
	Message string `form:"message" json:"message" xml:"message"`
	// Is the error temporary?
	Temporary bool `form:"temporary" json:"temporary" xml:"temporary"`
	// Is the error a timeout?
	Timeout bool `form:"timeout" json:"timeout" xml:"timeout"`
	// Is the error a server-side fault?
	Fault bool `form:"fault" json:"fault" xml:"fault"`
}

// HealthCheckInternalServerErrorResponseBody is the type of the "common"
// service "health_check" endpoint HTTP response body for the
// "internal_server_error" error.
type HealthCheckInternalServerErrorResponseBody struct {
	// Name is the name of this class of errors.
	Name string `form:"name" json:"name" xml:"name"`
	// ID is a unique identifier for this particular occurrence of the problem.
	ID string `form:"id" json:"id" xml:"id"`
	// Message is a human-readable explanation specific to this occurrence of the
	// problem.
	Message string `form:"message" json:"message" xml:"message"`
	// Is the error temporary?
	Temporary bool `form:"temporary" json:"temporary" xml:"temporary"`
	// Is the error a timeout?
	Timeout bool `form:"timeout" json:"timeout" xml:"timeout"`
	// Is the error a server-side fault?
	Fault bool `form:"fault" json:"fault" xml:"fault"`
}

// HealthCheckNotImplementedResponseBody is the type of the "common" service
// "health_check" endpoint HTTP response body for the "not_implemented" error.
type HealthCheckNotImplementedResponseBody struct {
	// Name is the name of this class of errors.
	Name string `form:"name" json:"name" xml:"name"`
	// ID is a unique identifier for this particular occurrence of the problem.
	ID string `form:"id" json:"id" xml:"id"`
	// Message is a human-readable explanation specific to this occurrence of the
	// problem.
	Message string `form:"message" json:"message" xml:"message"`
	// Is the error temporary?
	Temporary bool `form:"temporary" json:"temporary" xml:"temporary"`
	// Is the error a timeout?
	Timeout bool `form:"timeout" json:"timeout" xml:"timeout"`
	// Is the error a server-side fault?
	Fault bool `form:"fault" json:"fault" xml:"fault"`
}

// HealthCheckServiceUnavailableResponseBody is the type of the "common"
// service "health_check" endpoint HTTP response body for the
// "service_unavailable" error.
type HealthCheckServiceUnavailableResponseBody struct {
	// Name is the name of this class of errors.
	Name string `form:"name" json:"name" xml:"name"`
	// ID is a unique identifier for this particular occurrence of the problem.
	ID string `form:"id" json:"id" xml:"id"`
	// Message is a human-readable explanation specific to this occurrence of the
	// problem.
	Message string `form:"message" json:"message" xml:"message"`
	// Is the error temporary?
	Temporary bool `form:"temporary" json:"temporary" xml:"temporary"`
	// Is the error a timeout?
	Timeout bool `form:"timeout" json:"timeout" xml:"timeout"`
	// Is the error a server-side fault?
	Fault bool `form:"fault" json:"fault" xml:"fault"`
}

// HealthCheckGatewayTimeoutResponseBody is the type of the "common" service
// "health_check" endpoint HTTP response body for the "gateway_timeout" error.
type HealthCheckGatewayTimeoutResponseBody struct {
	// Name is the name of this class of errors.
	Name string `form:"name" json:"name" xml:"name"`
	// ID is a unique identifier for this particular occurrence of the problem.
	ID string `form:"id" json:"id" xml:"id"`
	// Message is a human-readable explanation specific to this occurrence of the
	// problem.
	Message string `form:"message" json:"message" xml:"message"`
	// Is the error temporary?
	Temporary bool `form:"temporary" json:"temporary" xml:"temporary"`
	// Is the error a timeout?
	Timeout bool `form:"timeout" json:"timeout" xml:"timeout"`
	// Is the error a server-side fault?
	Fault bool `form:"fault" json:"fault" xml:"fault"`
}

// NewHealthCheckResponseBody builds the HTTP response body from the result of
// the "health_check" endpoint of the "common" service.
func NewHealthCheckResponseBody(res *common.HealthCheckResponse) *HealthCheckResponseBody {
	body := &HealthCheckResponseBody{
		Status: res.Status,
	}
	return body
}

// NewHealthCheckBadRequestResponseBody builds the HTTP response body from the
// result of the "health_check" endpoint of the "common" service.
func NewHealthCheckBadRequestResponseBody(res *goa.ServiceError) *HealthCheckBadRequestResponseBody {
	body := &HealthCheckBadRequestResponseBody{
		Name:      res.Name,
		ID:        res.ID,
		Message:   res.Message,
		Temporary: res.Temporary,
		Timeout:   res.Timeout,
		Fault:     res.Fault,
	}
	return body
}

// NewHealthCheckUnauthorizedResponseBody builds the HTTP response body from
// the result of the "health_check" endpoint of the "common" service.
func NewHealthCheckUnauthorizedResponseBody(res *goa.ServiceError) *HealthCheckUnauthorizedResponseBody {
	body := &HealthCheckUnauthorizedResponseBody{
		Name:      res.Name,
		ID:        res.ID,
		Message:   res.Message,
		Temporary: res.Temporary,
		Timeout:   res.Timeout,
		Fault:     res.Fault,
	}
	return body
}

// NewHealthCheckForbiddenResponseBody builds the HTTP response body from the
// result of the "health_check" endpoint of the "common" service.
func NewHealthCheckForbiddenResponseBody(res *goa.ServiceError) *HealthCheckForbiddenResponseBody {
	body := &HealthCheckForbiddenResponseBody{
		Name:      res.Name,
		ID:        res.ID,
		Message:   res.Message,
		Temporary: res.Temporary,
		Timeout:   res.Timeout,
		Fault:     res.Fault,
	}
	return body
}

// NewHealthCheckNotFoundResponseBody builds the HTTP response body from the
// result of the "health_check" endpoint of the "common" service.
func NewHealthCheckNotFoundResponseBody(res *goa.ServiceError) *HealthCheckNotFoundResponseBody {
	body := &HealthCheckNotFoundResponseBody{
		Name:      res.Name,
		ID:        res.ID,
		Message:   res.Message,
		Temporary: res.Temporary,
		Timeout:   res.Timeout,
		Fault:     res.Fault,
	}
	return body
}

// NewHealthCheckConflictResponseBody builds the HTTP response body from the
// result of the "health_check" endpoint of the "common" service.
func NewHealthCheckConflictResponseBody(res *goa.ServiceError) *HealthCheckConflictResponseBody {
	body := &HealthCheckConflictResponseBody{
		Name:      res.Name,
		ID:        res.ID,
		Message:   res.Message,
		Temporary: res.Temporary,
		Timeout:   res.Timeout,
		Fault:     res.Fault,
	}
	return body
}

// NewHealthCheckTooManyRequestsResponseBody builds the HTTP response body from
// the result of the "health_check" endpoint of the "common" service.
func NewHealthCheckTooManyRequestsResponseBody(res *goa.ServiceError) *HealthCheckTooManyRequestsResponseBody {
	body := &HealthCheckTooManyRequestsResponseBody{
		Name:      res.Name,
		ID:        res.ID,
		Message:   res.Message,
		Temporary: res.Temporary,
		Timeout:   res.Timeout,
		Fault:     res.Fault,
	}
	return body
}

// NewHealthCheckClientClosedRequestResponseBody builds the HTTP response body
// from the result of the "health_check" endpoint of the "common" service.
func NewHealthCheckClientClosedRequestResponseBody(res *goa.ServiceError) *HealthCheckClientClosedRequestResponseBody {
	body := &HealthCheckClientClosedRequestResponseBody{
		Name:      res.Name,
		ID:        res.ID,
		Message:   res.Message,
		Temporary: res.Temporary,
		Timeout:   res.Timeout,
		Fault:     res.Fault,
	}
	return body
}

// NewHealthCheckInternalServerErrorResponseBody builds the HTTP response body
// from the result of the "health_check" endpoint of the "common" service.
func NewHealthCheckInternalServerErrorResponseBody(res *goa.ServiceError) *HealthCheckInternalServerErrorResponseBody {
	body := &HealthCheckInternalServerErrorResponseBody{
		Name:      res.Name,
		ID:        res.ID,
		Message:   res.Message,
		Temporary: res.Temporary,
		Timeout:   res.Timeout,
		Fault:     res.Fault,
	}
	return body
}

// NewHealthCheckNotImplementedResponseBody builds the HTTP response body from
// the result of the "health_check" endpoint of the "common" service.
func NewHealthCheckNotImplementedResponseBody(res *goa.ServiceError) *HealthCheckNotImplementedResponseBody {
	body := &HealthCheckNotImplementedResponseBody{
		Name:      res.Name,
		ID:        res.ID,
		Message:   res.Message,
		Temporary: res.Temporary,
		Timeout:   res.Timeout,
		Fault:     res.Fault,
	}
	return body
}

// NewHealthCheckServiceUnavailableResponseBody builds the HTTP response body
// from the result of the "health_check" endpoint of the "common" service.
func NewHealthCheckServiceUnavailableResponseBody(res *goa.ServiceError) *HealthCheckServiceUnavailableResponseBody {
	body := &HealthCheckServiceUnavailableResponseBody{
		Name:      res.Name,
		ID:        res.ID,
		Message:   res.Message,
		Temporary: res.Temporary,
		Timeout:   res.Timeout,
		Fault:     res.Fault,
	}
	return body
}

// NewHealthCheckGatewayTimeoutResponseBody builds the HTTP response body from
// the result of the "health_check" endpoint of the "common" service.
func NewHealthCheckGatewayTimeoutResponseBody(res *goa.ServiceError) *HealthCheckGatewayTimeoutResponseBody {
	body := &HealthCheckGatewayTimeoutResponseBody{
		Name:      res.Name,
		ID:        res.ID,
		Message:   res.Message,
		Temporary: res.Temporary,
		Timeout:   res.Timeout,
		Fault:     res.Fault,
	}
	return body
}

// NewHealthCheckPayload builds a common service health_check endpoint payload.
func NewHealthCheckPayload() *common.HealthCheckPayload {
	v := &common.HealthCheckPayload{}

	return v
}
