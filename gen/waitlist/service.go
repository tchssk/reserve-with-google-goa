// Code generated by goa v3.2.4, DO NOT EDIT.
//
// waitlist service
//
// Command:
// $ goa gen github.com/tchssk/reserve-with-google-goa/design

package waitlist

import (
	"context"

	goa "goa.design/goa/v3/pkg"
	"goa.design/goa/v3/security"
)

// Service is the waitlist service interface.
type Service interface {
	// BatchGetWaitEstimates implements batch_get_wait_estimates.
	BatchGetWaitEstimates(context.Context, *BatchGetWaitEstimatesPayload) (res *BatchGetWaitEstimatesResponse, err error)
	// CreateWaitlistEntry implements create_waitlist_entry.
	CreateWaitlistEntry(context.Context, *CreateWaitlistEntryPayload) (res *CreateWaitlistEntryResponse, err error)
	// GetWaitlistEntry implements get_waitlist_entry.
	GetWaitlistEntry(context.Context, *GetWaitlistEntryPayload) (res *GetWaitlistEntryResponse, err error)
	// DeleteWaitlistEntry implements delete_waitlist_entry.
	DeleteWaitlistEntry(context.Context, *DeleteWaitlistEntryPayload) (err error)
}

// Auther defines the authorization functions to be implemented by the service.
type Auther interface {
	// BasicAuth implements the authorization logic for the Basic security scheme.
	BasicAuth(ctx context.Context, user, pass string, schema *security.BasicScheme) (context.Context, error)
}

// ServiceName is the name of the service as defined in the design. This is the
// same value that is set in the endpoint request contexts under the ServiceKey
// key.
const ServiceName = "waitlist"

// MethodNames lists the service method names as defined in the design. These
// are the same values that are set in the endpoint request contexts under the
// MethodKey key.
var MethodNames = [4]string{"batch_get_wait_estimates", "create_waitlist_entry", "get_waitlist_entry", "delete_waitlist_entry"}

// BatchGetWaitEstimatesPayload is the payload type of the waitlist service
// batch_get_wait_estimates method.
type BatchGetWaitEstimatesPayload struct {
	Username string
	Password string
	Body     *BatchGetWaitEstimatesRequest
}

// BatchGetWaitEstimatesResponse is the result type of the waitlist service
// batch_get_wait_estimates method.
type BatchGetWaitEstimatesResponse struct {
	WaitlistStatus string
	WaitEstimate   []*WaitEstimate
}

// CreateWaitlistEntryPayload is the payload type of the waitlist service
// create_waitlist_entry method.
type CreateWaitlistEntryPayload struct {
	Username string
	Password string
	Body     *CreateWaitlistEntryRequest
}

// CreateWaitlistEntryResponse is the result type of the waitlist service
// create_waitlist_entry method.
type CreateWaitlistEntryResponse struct {
	WaitlistEntryID              *string
	WaitlistBusinessLogicFailure *WaitlistBusinessLogicFailure
}

// GetWaitlistEntryPayload is the payload type of the waitlist service
// get_waitlist_entry method.
type GetWaitlistEntryPayload struct {
	Username string
	Password string
	Body     *GetWaitlistEntryRequest
}

// GetWaitlistEntryResponse is the result type of the waitlist service
// get_waitlist_entry method.
type GetWaitlistEntryResponse struct {
	WaitlistEntry *WaitlistEntry
}

// DeleteWaitlistEntryPayload is the payload type of the waitlist service
// delete_waitlist_entry method.
type DeleteWaitlistEntryPayload struct {
	Username string
	Password string
	Body     *DeleteWaitlistEntryRequest
}

type BatchGetWaitEstimatesRequest struct {
	MerchantID string
	ServiceID  string
	PartySize  []int32
}

type WaitEstimate struct {
	PartySize                int32
	WaitLength               *WaitLength
	WaitlistConfirmationMode string
}

type WaitLength struct {
	PartiesAheadCount      int32
	EstimatedSeatTimeRange *EstimatedSeatTimeRange
}

type EstimatedSeatTimeRange struct {
	StartSeconds string
	EndSeconds   string
}

type CreateWaitlistEntryRequest struct {
	MerchantID        string
	ServiceID         string
	PartySize         int32
	UserInformation   *UserInformation
	AdditionalRequest *string
	IdempotencyToken  string
}

type UserInformation struct {
	UserID       string
	GivenName    string
	FamilyName   string
	Address      *PostalAddress
	Telephone    string
	Email        string
	LanguageCode *string
}

type PostalAddress struct {
	Country       string
	Locality      string
	Region        *string
	PostalCode    string
	StreetAddress string
}

type WaitlistBusinessLogicFailure struct {
	Cause       string
	Description *string
}

type GetWaitlistEntryRequest struct {
	WaitlistEntryID string
}

type WaitlistEntry struct {
	WaitlistEntryState      string
	WaitlistEntryStateTimes *WaitlistEntryStateTimes
	WaitEstimate            *WaitEstimate
}

type WaitlistEntryStateTimes struct {
	CreatedTimeSeconds        string
	CanceledTimeSeconds       *string
	ServiceReadiedTimeSeconds *string
	CheckedInTimeSeconds      *string
	SeatedTimeSeconds         *string
	MarkedNoShowTimeSeconds   *string
}

type DeleteWaitlistEntryRequest struct {
	WaitlistEntryID string
}

// MakeBadRequest builds a goa.ServiceError from an error.
func MakeBadRequest(err error) *goa.ServiceError {
	return &goa.ServiceError{
		Name:    "bad_request",
		ID:      goa.NewErrorID(),
		Message: err.Error(),
	}
}

// MakeUnauthorized builds a goa.ServiceError from an error.
func MakeUnauthorized(err error) *goa.ServiceError {
	return &goa.ServiceError{
		Name:    "unauthorized",
		ID:      goa.NewErrorID(),
		Message: err.Error(),
	}
}

// MakeForbidden builds a goa.ServiceError from an error.
func MakeForbidden(err error) *goa.ServiceError {
	return &goa.ServiceError{
		Name:    "forbidden",
		ID:      goa.NewErrorID(),
		Message: err.Error(),
	}
}

// MakeNotFound builds a goa.ServiceError from an error.
func MakeNotFound(err error) *goa.ServiceError {
	return &goa.ServiceError{
		Name:    "not_found",
		ID:      goa.NewErrorID(),
		Message: err.Error(),
	}
}

// MakeConflict builds a goa.ServiceError from an error.
func MakeConflict(err error) *goa.ServiceError {
	return &goa.ServiceError{
		Name:    "conflict",
		ID:      goa.NewErrorID(),
		Message: err.Error(),
	}
}

// MakeTooManyRequests builds a goa.ServiceError from an error.
func MakeTooManyRequests(err error) *goa.ServiceError {
	return &goa.ServiceError{
		Name:    "too_many_requests",
		ID:      goa.NewErrorID(),
		Message: err.Error(),
	}
}

// MakeClientClosedRequest builds a goa.ServiceError from an error.
func MakeClientClosedRequest(err error) *goa.ServiceError {
	return &goa.ServiceError{
		Name:    "client_closed_request",
		ID:      goa.NewErrorID(),
		Message: err.Error(),
	}
}

// MakeInternalServerError builds a goa.ServiceError from an error.
func MakeInternalServerError(err error) *goa.ServiceError {
	return &goa.ServiceError{
		Name:    "internal_server_error",
		ID:      goa.NewErrorID(),
		Message: err.Error(),
	}
}

// MakeNotImplemented builds a goa.ServiceError from an error.
func MakeNotImplemented(err error) *goa.ServiceError {
	return &goa.ServiceError{
		Name:    "not_implemented",
		ID:      goa.NewErrorID(),
		Message: err.Error(),
	}
}

// MakeServiceUnavailable builds a goa.ServiceError from an error.
func MakeServiceUnavailable(err error) *goa.ServiceError {
	return &goa.ServiceError{
		Name:    "service_unavailable",
		ID:      goa.NewErrorID(),
		Message: err.Error(),
	}
}

// MakeGatewayTimeout builds a goa.ServiceError from an error.
func MakeGatewayTimeout(err error) *goa.ServiceError {
	return &goa.ServiceError{
		Name:    "gateway_timeout",
		ID:      goa.NewErrorID(),
		Message: err.Error(),
	}
}
