// Code generated by goa v3.2.4, DO NOT EDIT.
//
// waitlist client
//
// Command:
// $ goa gen github.com/tchssk/reserve-with-google-goa/design

package waitlist

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Client is the "waitlist" service client.
type Client struct {
	BatchGetWaitEstimatesEndpoint goa.Endpoint
	CreateWaitlistEntryEndpoint   goa.Endpoint
	GetWaitlistEntryEndpoint      goa.Endpoint
	DeleteWaitlistEntryEndpoint   goa.Endpoint
}

// NewClient initializes a "waitlist" service client given the endpoints.
func NewClient(batchGetWaitEstimates, createWaitlistEntry, getWaitlistEntry, deleteWaitlistEntry goa.Endpoint) *Client {
	return &Client{
		BatchGetWaitEstimatesEndpoint: batchGetWaitEstimates,
		CreateWaitlistEntryEndpoint:   createWaitlistEntry,
		GetWaitlistEntryEndpoint:      getWaitlistEntry,
		DeleteWaitlistEntryEndpoint:   deleteWaitlistEntry,
	}
}

// BatchGetWaitEstimates calls the "batch_get_wait_estimates" endpoint of the
// "waitlist" service.
func (c *Client) BatchGetWaitEstimates(ctx context.Context, p *BatchGetWaitEstimatesPayload) (res *BatchGetWaitEstimatesResponse, err error) {
	var ires interface{}
	ires, err = c.BatchGetWaitEstimatesEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*BatchGetWaitEstimatesResponse), nil
}

// CreateWaitlistEntry calls the "create_waitlist_entry" endpoint of the
// "waitlist" service.
func (c *Client) CreateWaitlistEntry(ctx context.Context, p *CreateWaitlistEntryPayload) (res *CreateWaitlistEntryResponse, err error) {
	var ires interface{}
	ires, err = c.CreateWaitlistEntryEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*CreateWaitlistEntryResponse), nil
}

// GetWaitlistEntry calls the "get_waitlist_entry" endpoint of the "waitlist"
// service.
func (c *Client) GetWaitlistEntry(ctx context.Context, p *GetWaitlistEntryPayload) (res *GetWaitlistEntryResponse, err error) {
	var ires interface{}
	ires, err = c.GetWaitlistEntryEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*GetWaitlistEntryResponse), nil
}

// DeleteWaitlistEntry calls the "delete_waitlist_entry" endpoint of the
// "waitlist" service.
func (c *Client) DeleteWaitlistEntry(ctx context.Context, p *DeleteWaitlistEntryPayload) (err error) {
	_, err = c.DeleteWaitlistEntryEndpoint(ctx, p)
	return
}
