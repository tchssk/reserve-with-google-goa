// Code generated by goa v3.2.4, DO NOT EDIT.
//
// booking client
//
// Command:
// $ goa gen github.com/tchssk/reserve-with-google-goa/design

package booking

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Client is the "booking" service client.
type Client struct {
	BatchAvailabilityLookupEndpoint goa.Endpoint
	CheckAvailabilityEndpoint       goa.Endpoint
	CreateBookingEndpoint           goa.Endpoint
	UpdateBookingEndpoint           goa.Endpoint
	GetBookingStatusEndpoint        goa.Endpoint
	ListBookingsEndpoint            goa.Endpoint
}

// NewClient initializes a "booking" service client given the endpoints.
func NewClient(batchAvailabilityLookup, checkAvailability, createBooking, updateBooking, getBookingStatus, listBookings goa.Endpoint) *Client {
	return &Client{
		BatchAvailabilityLookupEndpoint: batchAvailabilityLookup,
		CheckAvailabilityEndpoint:       checkAvailability,
		CreateBookingEndpoint:           createBooking,
		UpdateBookingEndpoint:           updateBooking,
		GetBookingStatusEndpoint:        getBookingStatus,
		ListBookingsEndpoint:            listBookings,
	}
}

// BatchAvailabilityLookup calls the "batch_availability_lookup" endpoint of
// the "booking" service.
func (c *Client) BatchAvailabilityLookup(ctx context.Context, p *BatchAvailabilityLookupPayload) (res *BatchAvailabilityLookupResponse, err error) {
	var ires interface{}
	ires, err = c.BatchAvailabilityLookupEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*BatchAvailabilityLookupResponse), nil
}

// CheckAvailability calls the "check_availability" endpoint of the "booking"
// service.
func (c *Client) CheckAvailability(ctx context.Context, p *CheckAvailabilityPayload) (res *CheckAvailabilityResponse, err error) {
	var ires interface{}
	ires, err = c.CheckAvailabilityEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*CheckAvailabilityResponse), nil
}

// CreateBooking calls the "create_booking" endpoint of the "booking" service.
func (c *Client) CreateBooking(ctx context.Context, p *CreateBookingPayload) (res *CreateBookingResponse, err error) {
	var ires interface{}
	ires, err = c.CreateBookingEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*CreateBookingResponse), nil
}

// UpdateBooking calls the "update_booking" endpoint of the "booking" service.
func (c *Client) UpdateBooking(ctx context.Context, p *UpdateBookingPayload) (res *UpdateBookingResponse, err error) {
	var ires interface{}
	ires, err = c.UpdateBookingEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*UpdateBookingResponse), nil
}

// GetBookingStatus calls the "get_booking_status" endpoint of the "booking"
// service.
func (c *Client) GetBookingStatus(ctx context.Context, p *GetBookingStatusPayload) (res *GetBookingStatusResponse, err error) {
	var ires interface{}
	ires, err = c.GetBookingStatusEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*GetBookingStatusResponse), nil
}

// ListBookings calls the "list_bookings" endpoint of the "booking" service.
func (c *Client) ListBookings(ctx context.Context, p *ListBookingsPayload) (res *ListBookingsResponse, err error) {
	var ires interface{}
	ires, err = c.ListBookingsEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*ListBookingsResponse), nil
}
